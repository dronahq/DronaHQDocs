"use strict";(self.webpackChunkdronahq_docs=self.webpackChunkdronahq_docs||[]).push([[12630],{64639:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>f,frontMatter:()=>s,metadata:()=>o,toc:()=>p});n(67294);var r=n(3905);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const s={sidebar_position:2},u="Selecting conditional data",o={unversionedId:"reference/dronahq-query-language/selecting-conditional-data",id:"reference/dronahq-query-language/selecting-conditional-data",title:"Selecting conditional data",description:"You can use DronaHQ Query Language (DQL) to filter for specific data in your responses. Multiple responses return in an array. Single responses return as a single record. Sample data and DQL examples are below.",source:"@site/docs/reference/dronahq-query-language/selecting-conditional-data.md",sourceDirName:"reference/dronahq-query-language",slug:"/reference/dronahq-query-language/selecting-conditional-data",permalink:"/reference/dronahq-query-language/selecting-conditional-data",draft:!1,tags:[],version:"current",lastUpdatedAt:1706882289,formattedLastUpdatedAt:"Feb 2, 2024",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docSidebar",previous:{title:"Getting basic values",permalink:"/reference/dronahq-query-language/getting-basic-values"},next:{title:"Returning structured data",permalink:"/reference/dronahq-query-language/returning-structured-data"}},c={},p=[{value:"Contents",id:"contents",level:2},{value:"Example JSON",id:"example-json",level:2},{value:"Filter query results for objects with specific key-value pairs",id:"filter-query-results-for-objects-with-specific-key-value-pairs",level:2},{value:"DQL",id:"dql",level:5},{value:"Result",id:"result",level:5},{value:"Navigate your filtered results",id:"navigate-your-filtered-results",level:2},{value:"DQL",id:"dql-1",level:5},{value:"Result",id:"result-1",level:5},{value:"Return a single record",id:"return-a-single-record",level:2},{value:"DQL",id:"dql-2",level:5},{value:"Result",id:"result-2",level:5},{value:"Check if a field has a specific value",id:"check-if-a-field-has-a-specific-value",level:2},{value:"DQL",id:"dql-3",level:5},{value:"Result",id:"result-3",level:5},{value:"Get only unique payment amounts",id:"get-only-unique-payment-amounts",level:2},{value:"DQL",id:"dql-4",level:5},{value:"Result",id:"result-4",level:5}],d={toc:p},m="wrapper";function f(e){var{components:t}=e,n=l(e,["components"]);return(0,r.kt)(m,i(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){a(e,t,n[t])}))}return e}({},d,n),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"selecting-conditional-data"},"Selecting conditional data"),(0,r.kt)("p",null,"You can use DronaHQ Query Language (DQL) to filter for specific data in your responses. Multiple responses return in an array. Single responses return as a single record. Sample data and DQL examples are below."),(0,r.kt)("h2",{id:"contents"},"Contents"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#example-json"},"Example JSON")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#filter-query-results-for-objects-with-specific-key-value-pairs"},"Filter query results for objects with specific key-value pairs")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#navigate-your-filtered-results"},"Navigate your filtered results")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#return-a-single-record"},"Return a single record")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#check-if-a-field-has-a-specific-value"},"Check if a field has a specific value")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#get-only-unique-payment-amounts"},"Get only unique payment amounts"))),(0,r.kt)("h2",{id:"example-json"},"Example JSON"),(0,r.kt)("p",null,"The examples below use this JSON data:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "customer info": {\n        "customer field": "Customer data",\n        "unformated_customer_field": " customer \\n stuff ",\n        "total_value": "281.01",\n        "associated_usernames": ["user1, myuser, online_user"]\n    },\n    "payments": [\n        {\n            "invoice_number": "101301",\n            "date": "2022-09-11T16:12:34.494Z",\n            "description": "recurring subscription",\n            "amount": 110.48\n        },\n        {\n            "invoice_number": "101302",\n            "date": "2022-09-29T14:45:13.148Z",\n            "description": "one time purchase",\n            "amount": 24.49\n        },\n        {\n            "invoice_number": "101303",\n            "date": "2022-10-11T16:12:34.683Z",\n            "description": "recurring subscription",\n            "amount": 110.48\n        },\n        {\n            "invoice_number": "101304",\n            "date": "2022-10-12T11:45:22.182Z",\n            "description": "recurring subscription deluxe",\n            "amount": 35.56\n        }\n    ]\n}\n')),(0,r.kt)("h2",{id:"filter-query-results-for-objects-with-specific-key-value-pairs"},"Filter query results for objects with specific key-value pairs"),(0,r.kt)("p",null,'The example below filters for objects in the payments array that have the key-value pair "description": "recurring subscription".'),(0,r.kt)("h5",{id:"dql"},"DQL"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'payments[description="recurring subscription"]\n')),(0,r.kt)("h5",{id:"result"},"Result"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'[\n    {\n        "invoice_number": "101301",\n        "date": "2022-09-11T16:12:34.494Z",\n        "description": "recurring subscription",\n        "amount": 110.48\n    },\n    {\n        "invoice_number": "101303",\n        "date": "2022-10-11T16:12:34.683Z",\n        "description": "recurring subscription",\n        "amount": 110.48\n    }\n]\n')),(0,r.kt)("h2",{id:"navigate-your-filtered-results"},"Navigate your filtered results"),(0,r.kt)("p",null,"DQL uses the same syntax to navigate filtered query results as it does to navigate JSON data. The example below gets the values from the invoice.number fields in the payments array."),(0,r.kt)("h5",{id:"dql-1"},"DQL"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'payments[description="recurring subscription"].invoice_number\n')),(0,r.kt)("h5",{id:"result-1"},"Result"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'["101301","101303"]\n')),(0,r.kt)("h2",{id:"return-a-single-record"},"Return a single record"),(0,r.kt)("p",null,"When a filter has a single result, it returns as a record instead of an array. The filter below returns a single result as a record."),(0,r.kt)("h5",{id:"dql-2"},"DQL"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'payments[description="recurring subscription deluxe"].invoice_number\n')),(0,r.kt)("h5",{id:"result-2"},"Result"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'["101304"]\n')),(0,r.kt)("h2",{id:"check-if-a-field-has-a-specific-value"},"Check if a field has a specific value"),(0,r.kt)("p",null,'DQL can check if your query results have a specific key-value pair and return true or false. The example below checks the first item in the payments array for the key-value pair "description": "recurring".'),(0,r.kt)("h5",{id:"dql-3"},"DQL"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$contains(payments[0].description, "recurring")\n')),(0,r.kt)("h5",{id:"result-3"},"Result"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"true\n")),(0,r.kt)("h2",{id:"get-only-unique-payment-amounts"},"Get only unique payment amounts"),(0,r.kt)("p",null,"The $distinct function returns a single instance of any recurring values. In the example below, the 110.48 value appears twice in the data, but only once in the result."),(0,r.kt)("h5",{id:"dql-4"},"DQL"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$distinct(payments.amount)\n")),(0,r.kt)("h5",{id:"result-4"},"Result"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"[110.48, 24.49, 35.56]\n")))}f.isMDXComponent=!0}}]);