"use strict";(self.webpackChunkdronahq_docs=self.webpackChunkdronahq_docs||[]).push([[14144],{95678:(e,t,n)=>{n.d(t,{Z:()=>s});var i=n(67294);const a={"main-img":"main-img_qxSY"};function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function r(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const s=e=>{var{src:t}=e,s=r(e,["src"]);const[d,c]=(0,i.useState)(!1),p=n(2181)(`./static${t}`).default;return i.createElement("div",{className:a.thumbnail},i.createElement("img",o(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},i=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),i.forEach((function(t){l(e,t,n[t])}))}return e}({src:p},s),{className:`${a["main-img"]} ${s.className||""}`})))}},22296:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>d,default:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>u});n(67294);var i=n(3905),a=n(95678);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function r(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const s={sidebar_position:3},d="Creating Example controls using Control Editor",c={unversionedId:"control-editor-ide/sample-controls-code",id:"control-editor-ide/sample-controls-code",title:"Creating Example controls using Control Editor",description:"Configuring a header control",source:"@site/docs/control-editor-ide/sample-controls-code.md",sourceDirName:"control-editor-ide",slug:"/control-editor-ide/sample-controls-code",permalink:"/control-editor-ide/sample-controls-code",draft:!1,tags:[],version:"current",lastUpdatedAt:1701973196,formattedLastUpdatedAt:"Dec 7, 2023",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docSidebar",previous:{title:"Adding new properties in Coffee file's edit section",permalink:"/control-editor-ide/adding-new-properties"},next:{title:"Control Editor IDE Advance Concepts",permalink:"/control-editor-ide/advance-concepts"}},p={},u=[{value:"Configuring a header control",id:"configuring-a-header-control",level:2},{value:"Step 1 :- Create a new control",id:"step-1---create-a-new-control",level:3},{value:"Step 2 :- Changes in Handlebars",id:"step-2---changes-in-handlebars",level:3},{value:"Step 3 :- Adding static css",id:"step-3---adding-static-css",level:3},{value:"Step 4:- Adding properties",id:"step-4--adding-properties",level:3},{value:"Step 5 :- Making control dynamic",id:"step-5---making-control-dynamic",level:3},{value:"Step 6 :-Showing binded data",id:"step-6--showing-binded-data",level:3},{value:"Step 7 :- Adding Actions",id:"step-7---adding-actions",level:3},{value:"Step 8 :-Replication on Builder",id:"step-8--replication-on-builder",level:3},{value:"Input control :- Text input",id:"input-control---text-input",level:2},{value:"Coffee File",id:"coffee-file",level:3},{value:"CSS File",id:"css-file",level:3},{value:"Javascript File",id:"javascript-file",level:3},{value:"Handlebars File",id:"handlebars-file",level:3},{value:"Non_input Control :- Button",id:"non_input-control---button",level:2},{value:"Coffee_ File",id:"coffee_-file",level:3},{value:"CSS_ File",id:"css_-file",level:3},{value:"Javascript_ File",id:"javascript_-file",level:3},{value:"Handlebars_File",id:"handlebars_file",level:3}],f={toc:u},h="wrapper";function m(e){var{components:t}=e,n=r(e,["components"]);return(0,i.kt)(h,o(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},i=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),i.forEach((function(t){l(e,t,n[t])}))}return e}({},f,n),{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"creating-example-controls-using-control-editor"},"Creating Example controls using Control Editor"),(0,i.kt)("h2",{id:"configuring-a-header-control"},"Configuring a header control"),(0,i.kt)("p",null,"Let\u2019s create 1 sample control\nBefore that, get to the control list and see the heading control its properties , data binding and actions. We will also replicate the same."),(0,i.kt)("h3",{id:"step-1---create-a-new-control"},"Step 1 :- Create a new control"),(0,i.kt)("p",null,"Open ",(0,i.kt)("inlineCode",{parentName:"p"},"control editor \u2192 click on new \u2192 provide unique name , display name , search tags and choose an icon and click on Add button"),"."),(0,i.kt)("p",null,"Click on left arrow icon and navigate to sample control (display name)."),(0,i.kt)("p",null,"Click on save button or press ",(0,i.kt)("inlineCode",{parentName:"p"},"CTRL + S")," once."),(0,i.kt)("p",null,"Now open an app (or refresh app if already open) and check for sample control (display name) we can use the search tag provided at time of control creation (our control will be inside the custom section)."),(0,i.kt)("p",null,"Click on the control or drag it to the builder view and see the output."),(0,i.kt)("figure",null,(0,i.kt)(a.Z,{src:"/img/advanced-concepts/custom-control-ide/sample-controls/sample-controls-header-output-1.png",alt:"Simple Database GUI",mdxType:"Image"}),(0,i.kt)("figcaption",{align:"left"},(0,i.kt)("i",null,"new controls initial output."))),(0,i.kt)("p",null,"Please check the output on the preview screen as well and in properties we are able to see only one property edit value of that property and see the changes on both screens."),(0,i.kt)("h3",{id:"step-2---changes-in-handlebars"},"Step 2 :- Changes in Handlebars"),(0,i.kt)("p",null,"Let\u2019s understand and edit the code for Handlebars first"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-handlebars"},'<div class="wrapper {{#if disabled}}isDisabled{{/if}}">\n    <div class="label">{{label_value}}</div>\n</div>\n')),(0,i.kt)("p",null,"Here we always have to put our code inside the wrapper class div.\nHere we can see the value of the label_value attribute variable is displayed."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Let\u2019s edit this code")," :- (copy and paste this code inside wrapper)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<h1 class="header_body">\n   {{label_value}}\n</h1>\n')),(0,i.kt)("p",null,"So this is the small logic for a HTML heading tag.\nSave the code and again refresh the app and open preview screen and we are able to see the value in as HTML H1 tag output."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Output")," :-"),(0,i.kt)("figure",null,(0,i.kt)(a.Z,{src:"/img/advanced-concepts/custom-control-ide/sample-controls/sample-controls-header-output-2.png",alt:"Simple Database GUI",mdxType:"Image"}),(0,i.kt)("figcaption",{align:"left"},(0,i.kt)("i",null,"after adding handlebars code."))),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"No change will be visible on the builder screen.")),(0,i.kt)("h3",{id:"step-3---adding-static-css"},"Step 3 :- Adding static css"),(0,i.kt)("p",null,"Let\u2019s add css for header_body class in css file\nAdd this code to css file (please do not remove any existing code)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-css"},".{{cid}} .header_body{\n    font-weight: 500;\n    text-align: left;\n    color: #26BC6A;\n    line-height: 32px;\n    letter-spacing: 1px;\n}\n")),(0,i.kt)("p",null,"Again save the code , refresh the app and see the output on the preview screen."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Output")," :-"),(0,i.kt)("figure",null,(0,i.kt)(a.Z,{src:"/img/advanced-concepts/custom-control-ide/sample-controls/sample-controls-header-output-3.png",alt:"Simple Database GUI",mdxType:"Image"}),(0,i.kt)("figcaption",{align:"left"},(0,i.kt)("i",null,"after adding css code."))),(0,i.kt)("h3",{id:"step-4--adding-properties"},"Step 4:- Adding properties"),(0,i.kt)("p",null,"Now as we have made a structure for control with static values let\u2019s convert this structure as dynamic by adding different properties.\nSo, lets go to edit section of Coffee file and here we will add properties that we need."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Please add one property at a time and examine the output for the same.")),(0,i.kt)("p",null,"So let\u2019s add a new property,"),(0,i.kt)("p",null,"Already existing Code :-"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- your code here --\x3e\n    <div class="edit_view_ctrl_prop">\n        <%= Formbuilder.templates[\'edit/text_input\']({\n            "label": {name:"Label value", position:"left", width:""},\n            "name": "label_value",\n            "col_width":"two_col"\n        })%>\n    </div>\n\x3c!-- your code ends here--\x3e\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Output")," :-"),(0,i.kt)("figure",null,(0,i.kt)(a.Z,{src:"/img/advanced-concepts/custom-control-ide/sample-controls/sample-controls-header-output-4.png",alt:"Simple Database GUI",mdxType:"Image"}),(0,i.kt)("figcaption",{align:"left"},(0,i.kt)("i",null,"sample properties."))),(0,i.kt)("p",null,"Add this code in the above section before closing of tag."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'<%= Formbuilder.templates[\'edit/text_input\']({\n   "label": {name:"Text", position:"left", width:""},\n   "name": "heading_text",\n   "col_width":"two_col",\n}) %>\n')),(0,i.kt)("p",null,"Structure should look like this ,"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- your code here --\x3e\n    <div class="edit_view_ctrl_prop">\n        <%= Formbuilder.templates[\'edit/text_input\']({\n            "label": {name:"Label value", position:"left", width:""},\n            "name": "label_value",\n            "col_width":"two_col"\n        })%>\n        <%= Formbuilder.templates[\'edit/text_input\']({\n            "label": {name:"Text", position:"left", width:""},\n            "name": "heading_text",\n            "col_width":"two_col",\n        }) %>\n    </div>\n\x3c!-- your code ends here--\x3e\n')),(0,i.kt)("p",null,'Now as we have used a new "heading_text" variable to "name" we have to add the same variable to defaultAttributes as well .\nCurrent Structure of default attributes,'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'defaultAttributes: (attrs) ->\n    attrs.label = \'MyControl\'\n    attrs.label_hidden = false\n    attrs.label_value = "Sample Label"\n    attrs.data_type = "string"\n    attrs.field_composition_type = "single"\n    attrs.field_available_in_database_editor = false\n    attrs.field_editable_in_database_editor = false\n    attrs.field_database_editor_data_format = "single_line_text"\n    attrs\n')),(0,i.kt)("p",null,"We can add our variables anywhere between the first and last line means our default attributes should always end with attrs.\nLet\u2019s add our variable as ",(0,i.kt)("inlineCode",{parentName:"p"},'attrs.heading_text = ""'),". "),(0,i.kt)("p",null,'Also we have to provide default value every time we introduce a new variable (if no default value then give "" only 2 double quotes).\nSo structure after will look like,'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'defaultAttributes: (attrs) ->\n    attrs.label = \'MyControl\'\n    attrs.label_hidden = false\n    attrs.label_value = "Sample Label"\n    attrs.data_type = "string"\n    attrs.field_composition_type = "single"\n    attrs.field_available_in_database_editor = false\n    attrs.field_editable_in_database_editor = false\n    attrs.field_database_editor_data_format = "single_line_text"\n    attrs.heading_text = ""\n    attrs\n')),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"we have to always maintain this structure")),(0,i.kt)("p",null,"Output after adding this\n(To see the changes always remember to save the code and refresh the app)"),(0,i.kt)("figure",null,(0,i.kt)(a.Z,{src:"/img/advanced-concepts/custom-control-ide/sample-controls/sample-controls-header-output-5.png",alt:"Simple Database GUI",mdxType:"Image"}),(0,i.kt)("figcaption",{align:"left"},(0,i.kt)("i",null,"after adding new property."))),(0,i.kt)("p",null,"So like this add all other required properties as,"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'<%= Formbuilder.templates[\'edit/dropdown_new\']({\n    "label": {name:"Size", position:"left", width:"two_col"},\n    "name": "label_size",\n     "values" :[{"H1":"h1"},{"H2":"h2"},{"H3":"h3"},{"H4":"h4"},{"H5":"h5"},{"H6":"h6"}],\n     "col_width":"",\n     "isMultiselect":false,\n}) %>\n <%= Formbuilder.templates[\'edit/numberPickerWithUnit\']({\n     "label":  {name:"Letter Spacing",position:"left",width:"two_col"},\n      "name": "letter_spacing",\n      "disableUnit": true,\n      "steps": "1",\n      "max": "1000",\n       "min": "0",\n}) %>\n<%= Formbuilder.templates[\'edit/numberPickerWithUnit\']({\n       "label":  {name:"Line Height",position:"left",width:"two_col"},\n        "name": "line_height",\n        "disableUnit": true,\n        "steps": "1",\n        "max": "1000",\n        "min": "0",\n }) %>\n</div>\n<div class="edit_view_ctrl_prop prop_group">\n   <label class="prop_group_label">FONT</label>\n    <%= Formbuilder.templates[\'edit/font_weight\']({\n        "label":  {name:"Weight"},\n        "name": "header_font_weight",\n    }) %>\n    <%= Formbuilder.templates[\'edit/color_picker\']({\n        "label": {name:"Color", position:"top", width:""},\n        "name": "header_font_color",\n        "solid_color_only" : true,\n        "col_width":"two_col"\n    }) %>\n    <%= Formbuilder.templates[\'edit/selectbar\']({\n        "label": {name:"Alingment", position:"top"},\n        "name": "header_text_alignment",\n        "Icon_type":"icon",    \n        "col_width":"three_col",\n   }) %>\n</div>\n')),(0,i.kt)("p",null,"Please see the number of opening and closing div tags.\nand variable in defaultAttributes as,"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"}," attrs.header_text_alignment = 'left'\n attrs.header_font_color = '#444'\n attrs.header_font_weight = '500'\n attrs.label_size = 'h2'\n attrs.textarea_rows = '2'\n attrs.heading_text = 'Heading'\n attrs.line_height = \"32\"\n attrs.line_height_unit = \"px\"\n attrs.letter_spacing = \"1\"\n attrs.letter_spacing_unit = \"px\"\n")),(0,i.kt)("h3",{id:"step-5---making-control-dynamic"},"Step 5 :- Making control dynamic"),(0,i.kt)("p",null,"As we have stored these values in variables we can now make our control dynamic.\nSo, let\u2019s make changes in the handlebars file first."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-handlebars"},'<{{label_size}} class="header_body">\n    {{heading_text}}\n</{{label_size}}>\n')),(0,i.kt)("p",null,"Now the heading tag will be rendered as per the value selected in the dropdown.\nChanges in css file"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-css"},".{{cid}} .header_body{\n    font-weight: {{header_font_weight}};\n    text-align: {{header_text_alignment}};\n    color: {{header_text_color}};\n    margin:auto;\n    line-height: {{line_height}}{{line_height_unit}};\n    letter-spacing: {{letter_spacing}}{{letter_spacing_unit}};\n}\n")),(0,i.kt)("p",null,"How our control will respond to changes made in the properties section.(changes only visible in preview)."),(0,i.kt)("figure",null,(0,i.kt)(a.Z,{src:"/img/advanced-concepts/custom-control-ide/sample-controls/sample-controls-header-output-6.png",alt:"Simple Database GUI",mdxType:"Image"}),(0,i.kt)("figcaption",{align:"left"},(0,i.kt)("i",null,"output after adding dynamic values."))),"This is the H2 tag , we can change different properties and see the changes.",(0,i.kt)("p",null,"As we want to band text data only to this control so we do not change "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"attrs.field_composition_type = \u201csingle\u201d\n")),(0,i.kt)("h3",{id:"step-6--showing-binded-data"},"Step 6 :-Showing binded data"),(0,i.kt)("p",null,"let\u2019s show binded data in our control."),(0,i.kt)("p",null,"So we have to write this logic in the javascript file. We have to write this logic in the setValue function."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"this.setValue = function (obj) {\n    //Your control will get data from DronaHQ here.\n    if(obj){\n        this.$el.find('.header_body').text(obj);\n    }\n};\n")),(0,i.kt)("p",null,"After adding this we can check our control by binding data from different sources."),(0,i.kt)("h3",{id:"step-7---adding-actions"},"Step 7 :- Adding Actions"),(0,i.kt)("p",null,"let\u2019s add action to our control. To add action to our control we have to add one attribute in the coffee file defaultAttributes section and handle it in the javascript section.\nIn the coffee file defaultAttributes we need to add this code."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'attrs.action_items = {\n   "button_click": {\n    "events": ["click"],\n    "selector": ".header_body"\n   }\n}\n')),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"please check the indentation properly otherwise when we reload the app it will not load properly and will give us errors.\nFinal default attributes will look like this,")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'defaultAttributes: (attrs) ->\n    attrs.label = \'MyControl\'\n    attrs.label_hidden = false\n    attrs.label_value = "Sample Label"\n    attrs.data_type = "string"\n    attrs.field_composition_type = "single"\n    attrs.field_available_in_database_editor = false\n    attrs.field_editable_in_database_editor = false\n    attrs.field_database_editor_data_format = "single_line_text"\n    attrs.header_text_alignment = \'left\'\n    attrs.header_font_color = \'#444\'\n    attrs.header_font_weight = \'500\'\n    attrs.label_size = \'h2\'\n    attrs.textarea_rows = \'2\'\n    attrs.heading_text = \'Heading\'\n    attrs.line_height = "32"\n    attrs.line_height_unit = "px"\n    attrs.letter_spacing = "1"\n    attrs.letter_spacing_unit = "px"\n    attrs\n')),(0,i.kt)("p",null,"To handle this event we have to add the following code in javascript file initComponent function as ,"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"this.initComponent = function () {\n    //Initialize your components here, if needed.\n    var self = this;\n    this.$el.find(\".header_body\").on('click',function(e){\n        triggerAction(self.model.field_key_name,'button_click','click',e);\n    });\n};\n")),(0,i.kt)("h3",{id:"step-8--replication-on-builder"},"Step 8 :-Replication on Builder"),(0,i.kt)("p",null,"Now we have completed our control and will work perfectly for the preview screen. If we find it difficult to write code in a coffee script we can also ignore this step."),(0,i.kt)("p",null,"So now we can bring the same look and feel of the preview screen to the builder screen as well."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"we should never bring our event's logic to the builder screen.\nSo let\u2019s first build the same UI for the builder screen.")),(0,i.kt)("p",null,"First we have to make changes in Coffee file view section,\nHere also we have the same wrapper class div as handlebars so we just have to put the same logic as handlebars but using coffee script syntax."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},"<div class=\"wrapper\">\n    <<%= rf.get('label_size') %> class=\"header_body\">\n        <%if(rf.get('LiveData')){%><%= rf.get('LiveData') %><% }else{%><%= rf.get('heading_text') %><%}%>\n    </<%= rf.get('label_size') %> >\n</div>\n")),(0,i.kt)("p",null,"Here , the LiveData variable is used to get data binded from any data source using the BindData section.\nAnd for css we have to add use same logic as in css file but we coffee script syntax,"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},".<%= rf.get('cid') %> .header_body{\n    font-weight: <%= rf.get('header_font_weight') %>;\n    text-align: <%= rf.get('header_text_alignment') %>;\n    color:<%= rf.get('header_text_color') %>;\n    line-height:<%= rf.get('line_height') %><%= rf.get('line_height_unit') %>;\n    letter-spacing: <%= rf.get('letter_spacing') %><%= rf.get('letter_spacing_unit') %>;\n}\n")),(0,i.kt)("p",null,"So finally our style tag will look like this"),(0,i.kt)("p",null,"Now we can see our control will work the same as the preview screen."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"For reference here is the code of 1 input and 1 non-input control"),"."),(0,i.kt)("h2",{id:"input-control---text-input"},"Input control :- Text input"),(0,i.kt)("figure",null,(0,i.kt)(a.Z,{src:"/img/advanced-concepts/custom-control-ide/sample-controls/sample-controls-input.png",alt:"Simple Database GUI",mdxType:"Image"}),(0,i.kt)("figcaption",{align:"center"},(0,i.kt)("i",null,"Input Control - Text Input."))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Code")," :-"),(0,i.kt)("h3",{id:"coffee-file"},"Coffee File"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-coffee"},'Formbuilder.registerField \'text\',\n group: \'Form\'\n order: 1\n type: \'input\'\n view: """\n   <div class="fb-field-wrapper control-body-style response-field-<%= rf.get(\'field_type\') %> <%= rf.get(\'cid\') %> <% if( rf.get(\'disabled\')) { %>isDisabled<% } %>" data-requiredfield = "<%= rf.get(\'required\') %>">\n       <div class = "wrapper <% if( rf.get(\'disabled\')) { %>isDisabled<% } %>">\n           <div class="ui input">\n               <input type="text"\n                       minlength="<%= rf.get(\'text_min_length\') %>"\n                       maxlength="<%= rf.get(\'text_max_length\') %>"\n                       placeholder="<%= rf.get(\'placeholder\') %>"\n                       data-content="<%= rf.get(\'tooltip\') %>"\n                       class="tooltip">\n               <div  class="scanner" style="display:none">\n                   <img src="images/qrcode.svg" style="height: 28px;">\n               </div>\n           </div>\n       </div>\n       <div class="fb-field-error-message">\n           \x3c!-- Error Message Here --\x3e\n       </div>\n   </div>\n \n   <style>\n   .<%= rf.get(\'cid\') %>  .wrapper{\n       display:flex;\n       }\n \n   .<%= rf.get(\'cid\') %> .ui.input{\n       width: 100%;\n       position: relative;\n   }\n   .<%= rf.get(\'cid\') %> .scanner{\n       position: absolute;\n       right: 0;\n       padding: 6px;\n   }\n \n   .<%= rf.get(\'cid\') %> input {\n       font-weight: <%= rf.get(\'input_font_weight\') %> !important;\n       color: <%= rf.get(\'input_font_color\') %> !important;\n       font-size: <%= rf.get(\'input_font_size\') %> !important;\n       height: <%= rf.get(\'input_control_height\') %> !important;\n       border-color:<%= rf.get(\'formbuilder_theme\') %> !important;\n   }\n   .<%= rf.get(\'cid\') %> input::-webkit-input-placeholder\n   {\n       font-weight: <%= rf.get(\'input_placeholder_font_weight\') %> !important;\n       color: <%= rf.get(\'input_placeholder_text_color\') %> !important;\n       font-size: <%= rf.get(\'input_placeholder_text_size\') %> !important;\n   }\n   .<%= rf.get(\'cid\') %> .isDisabled .ui.input > input {\n       background: #eee !important;\n       color: #666 !important;\n       border-color: #ddd !important;\n       opacity: 1 !important;\n   }\n \n   .<%= rf.get(\'cid\') %> .isDisabled .ui.input > input::-webkit-input-placeholder {\n   color: #bbb !important;\n   }\n   .<%= rf.get(\'cid\') %> .isDisabled .component-head-container{\n   color:#666 !important;\n   }\n   </style>\n   <script>\n       (function() {\n           let $el = $(\'body\').find(".response-field-<%= rf.get(\'field_type\') %>.<%= rf.get(\'cid\') %>");\n           let $input = $el.find(\'.wrapper .ui.input input\');\n           let liveData = builderComponents["<%= rf.get(\'field_key_name\')%>"].backBoneModel.get("LiveData");\n           $input.val(liveData);\n       })()\n   <\/script>\n """\n # VIEW JS IS FUNCTION WITH TWO PARAMETER $el, model\n viewJs: ($el, model, opts) ->\n   # console.log("js file updated", this);\n   if opts.RegisterResChangeCallback\n     resChangeCallBack = (resData)->\n       console.log("res updated")\n     opts.RegisterResChangeCallback(resChangeCallBack)\n    \n edit: """\n   <div class="category-section">\n       <div class="ui edit-accordion accordion">\n           <div class="title active header-accordion">\n               Properties<span class="caret"></span>\n           </div>\n           <div class="content active">\n               <div class="edit_view_ctrl_prop " >\n                   <%= Formbuilder.templates[\'edit/color_picker\']({\n                       "label": {name:"Theme", position:"left", width:""},\n                       "name": "formbuilder_theme",\n                       "col_width":"two_col",\n                       "solid_color_only" : true\n                   }) %>\n                   <%= Formbuilder.templates[\'edit/text_input\']({\n                       "label": {name:"Placeholder", position:"left", width:""},\n                       "name": "placeholder",\n                       "col_width":"two_col"\n                   }) %>\n                   <%= Formbuilder.templates[\'edit/dropdown_new\']({\n                       "label": {name:"Input Type", position:"left"},\n                       "name": "input_type",\n                       "values" :[{"Text":"text"},{"Url":"url"},{"Email":"email"},{"Password":"password"}],\n                       "info": "Text-Properties-Input Type",\n                       "col_width":"two_col",\n                       "isMultiselect":false,\n                   }) %>\n                   <%= Formbuilder.templates[\'edit/numberPicker\']({\n                       "label":  {name:"Min Character", position:"left", width:""},\n                       "name": "text_min_length",\n                       "disableUnit": false,\n                       "steps": "1",\n                       "max": "1000",\n                       "min": "0",\n                       "col_width":"two_col",\n                   }) %>\n                   <%= Formbuilder.templates[\'edit/numberPicker\']({\n                       "label":  {name:"Max Character", position:"left", width:""},\n                       "name": "text_max_length",\n                       "disableUnit": false,\n                       "steps": "1",\n                       "max": "1000",\n                       "min": "0",\n                       "col_width":"two_col",\n                   }) %>\n                   <%= Formbuilder.templates[\'edit/numberPicker\']({\n                       "label":  {name:"Debounce Time (In ms)", position:"left", width:"two_col"},\n                       "name": "debounceEventTime",\n                       "disableUnit": false,\n                       "steps": "100",\n                       "max": "1000",\n                       "min": "0",\n                       "col_width":"",\n                       "info": "Text Input - Properties - Debounce Time (In ms)",\n                   }) %>\n                    <%= Formbuilder.templates[\'edit/toggle\']({\n                       "label": {name:"Show Raw Data", position:"left", width:"two_col"},\n                       "name": "dhq_show_rawdata",\n                       "info": "Text-Properties-Show Raw Data",\n                   }) %>\n                   <%= Formbuilder.templates[\'edit/toggle\']({\n                       "label": {name:"Show Barcode Scanner ", position:"left", width:"two_col"},\n                       "name": "isqrvisible",\n                   }) %>\n               </div>   \n           </div>\n       </div>\n   </div>\n """\n \n addButton: """\n     <span class="symbol">\n       <span class="symbol-icon-box">\n         <img src="app/src/images/controls/text.svg" />\n       </span>\n       <span class="clabel">Text Input</span>\n     </span>\n """\n \n gridConfiguration:\n   minWidth: 1,\n   maxWidth: 24,\n   minHeight: 6,\n   maxHeight: 0,\n   defaultHeight: 8,\n   defaultWidth: 12,\n   isWidthResizable: true,\n   isHeightResizable: true\n \n defaultAttributes: (attrs) ->\n   attrs.label = \'Text Input\'\n   attrs.placeholder = \'Write here...\'\n   attrs.min_length = \'\'\n   attrs.max_length = \'\'\n   attrs.debounceEventTime = 3000\n   attrs.text_max_length =\'\'\n   attrs.text_min_length =\'\'\n   attrs.action_items = {\n       "value_change": {\n           "events": ["value_change"],\n           "selector": ""\n       }, \n       "enter_press": {\n           "events": ["enter_press"],\n           "selector": ""\n       }\n       "focus_out": {\n           "events": ["focus_out"],\n           "selector": ""\n       }\n   }\n   attrs.LiveData = ""\n   attrs.value = \'\'\n   attrs.input_type = "text"\n   attrs.length_unit = \'characters\'\n   attrs.field_responsive = true\n   attrs.disabled = false\n   attrs.data_type = "string"\n   attrs.isqrvisible = false\n   attrs.field_composition_type = "single"\n   attrs.field_available_in_database_editor = true\n   attrs.field_editable_in_database_editor = true\n   attrs.field_values_source = ""\n   attrs.field_database_editor_data_format = "single_line_text"\n   attrs.field_datatypes = []\n   attrs.formbuilder_theme = \'#BBBBBB\'\n   attrs\n')),(0,i.kt)("h3",{id:"css-file"},"CSS File"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-css"},'.{{cid}} .component-head-container {\n    font-size: {{label_font_size}}{{label_font_size_unit}};\n    font-weight: {{label_font_weight}};\n    color: {{label_text_color}};\n    text-align: {{label_text_alignment}};\n}\n.{{cid}} .wrapper{\n   display:flex;\n}\n \n.{{cid}} .ui.input{\n   width: 100%;\n position:relative;\n }\n.{{cid}} .scanner{\n   position: absolute;\n   right: 0;\n   padding: 6px;\n}\n.{{cid}} .ui.input > input {\n    font-weight: {{input_font_weight}};\n    color: {{input_font_color}};\n    font-size: {{input_font_size}};\n    height: {{input_control_height}};\n    border-color:{{formbuilder_theme}};\n}\n.{{cid}} .ui.input > input::-webkit-input-placeholder{\n    font-weight: {{input_placeholder_font_weight}};\n color: {{input_placeholder_text_color}};\n font-size: {{input_placeholder_text_size}};\n}\n.{{cid}} .isDisabled .ui.input > input {\n    background: #eee !important;\n    color: #666 !important;\n    border-color: #ddd !important;\n    opacity: 1 !important;\n}\n.{{cid}} .isDisabled .ui.input > input::-webkit-input-placeholder {\n    color: #bbb !important;\n}\n.{{cid}} .isDisabled .ui.basic.label {\nbackground: #eee !important;\n    color: #666 !important;\n    border-color: #ddd; !important;\n}\n.{{cid}} .isDisabled .component-head-container{\n color:#666;\n}\n.{{cid}} .textarea-control{\n    -webkit-appearance: none;\n-moz-appearance: none;\n    appearance: none;\n    border-radius: 3px;\n    border:1px solid {{formbuilder_theme}};\n    font-size: {{input_font_size}};\n    color: #444;\n    padding: 10px;\n      font-weight: {{input_font_weight}};\n    color: {{input_font_color}};\n    font-size: {{input_font_size}};\n    min-height: {{input_control_height}};\n    border-color:{{formbuilder_theme}};\n}\n.{{cid}} .textarea.textarea-control.isDisabled {\n        background: #eee !important;\n        color: #666 !important;\n    border-color: #ddd !important;\n    opacity: 1 !important;\n}\n.{{cid}} .textarea.textarea-control.isDisabled > .textarea::-webkit-input-placeholder {\n    color: #bbb !important;\n}\n.{{cid}} .textarea.textarea-control {\n    display: block;\n    width: 100%;\n    overflow: hidden;\n    resize:none;\n    line-height: 20px;\n    outline: none;\n}\n.{{cid}} .textarea[contenteditable]:empty::before {\n    content: "{{placeholder}}";\n    font-weight: {{input_placeholder_font_weight}};\n    color: {{input_placeholder_text_color}};\n    font-size: {{input_placeholder_text_size}};\n}\n')),(0,i.kt)("h3",{id:"javascript-file"},"Javascript File"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'BSCOMPONENTS["text"] = function () {\n   this.default = {\n       value: ""\n   };\n   this.$componentLoader = "";\n   this.initComponent = function () {\n       this.default.value = this.model.value;\n       var input_box = this.$el.find("input");\n       var self = this;\n       this.$componentLoader = this.$el.find(\'.component-loader\');\n       this.$el.find(\'.tooltip\').popup();\n       self.checkBarcodeCompatibility();\n       this.$el.find("input").on(\'focusout\', function (e) {\n           triggerAction(self.model.field_key_name, \'focus_out\', \'focus_out\', e);\n       });\n       // on key press trigger action 2 sec timer\n       // debounce here\n       this.$el.find("input").on(\'keydown\', self.debounce(function (e) {\n           var keycode = e.which || e.keyCode;\n           self.initConditionalVisibility(self.model.field_key_name);\n           self.execValidations();\n           if ((keycode != 13 || e.code != \'Enter\') && e.key != "") {\n               triggerAction(self.model.field_key_name, \'value_change\', \'value_change\', e);\n           }\n       }, self.model.debounceEventTime));\n       this.$el.find("input").on(\'keydown\', this.handleEnterPress.bind(this));\n       // end\n       this.$el.find(\'input\').on(\'focus\', function () {\n           $(this).parents().find(\'.\' + self.model.cid).find(\'.scanner\').fadeIn();\n       }).on(\'blur\', function () {\n           $(this).parents().find(\'.\' + self.model.cid).find(\'.scanner\').fadeOut();\n       });\n       this.$el.find(".scanner").on(\'click\', function (e) {\n           cordova.plugins.barcodeScanner.scan(\n               function (result) {\n                   if (!result.cancelled) {\n                       input_box.val(result.text);\n                       self.initConditionalVisibility(self.model.field_key_name);\n                       self.execValidations();\n                       triggerAction(self.model.field_key_name, \'value_change\', \'value_change\', e);\n                   }\n               },\n               function (error) {\n                   alert("Scanning failed: " + error);\n               }\n           );\n       });\n   };\n   this.debounce = function (callback, delay) {\n       var timeout\n       return function () {\n           var args = arguments\n           clearTimeout(timeout)\n           timeout = setTimeout(function () {\n               callback.apply(this, args)\n           }.bind(this), delay)\n       }\n   }\n   this.handleEnterPress = function (e) {\n       var self = this\n           var keycode = e.which || e.keyCode;\n           if (keycode === 13 || e.code === \'Enter\') {\n               triggerAction(self.model.field_key_name, \'enter_press\', \'enter_press\', e);\n              \n           }\n   }\n   this.initConditionalVisibility = function (fieldKey) {\n       triggerConditionalVisibility(fieldKey);\n   };\n   this.getValue = function () {\n       var cvalue = this.$el.find("input").val();\n       return { question: this.model.label, value: cvalue, id: this.model.field_key_name, name: this.model.field_display_key_name };\n   };\n   this.hide = function () {\n       this.$el.addClass("hide");\n   };\n   this.show = function () {\n       this.$el.removeClass("hide");\n   };\n   this.setValue = function (value) {\n       this.$el.find("input").val(value);\n       this.initConditionalVisibility(this.model.field_key_name);\n       triggerAction(this.model.field_key_name, \'value_change\', \'value_change\');\n   };\n   this.reset = function () {\n       this.setValue(this.default.value);\n       this.initConditionalVisibility(this.model.field_key_name);\n   };\n   this.startComponentLoader = function () {\n       this.$componentLoader.removeClass("hide");\n       this.$el.addClass(\'component-loading\');\n   };\n   this.stopComponentLoader = function () {\n       this.$componentLoader.addClass("hide");\n       this.$el.removeClass(\'component-loading\');\n   };\n   this.beforeSubmitValidation = function () {\n       /* Description: your condition for input validation before submit\n       Return Type: return true if validation is successful or return false\n       in case of validation failed with message\n       */\n       var errorList = [];\n       this.clearError();\n       var isRequired = this.$el.attr("data-requiredfield");\n       isRequired = isRequired.toLowerCase() == "true";\n       var inputType = this.model.input_type;\n       var emailReg = /^(([^<>()\\[\\]\\\\.,;:\\s@"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@"]+)*)|(".+"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n       var urlRegex = /[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/gi;\n       var val = this.$el.find("input").val().trim();\n       var maxLength = this.model.text_max_length || -1;\n       var minLength = this.model.text_min_length || -1;\n       if (val) {\n           if (val.length < minLength && minLength > -1 || val.length > maxLength && maxLength > -1) {\n               errorList.push("Value should be " + minLength + " to " + maxLength + " characters long.")\n           }\n       }\n       if (inputType == "email") {\n           var isEmailValid = emailReg.test(String(val).toLowerCase());\n           if (val != "" && !isEmailValid) {\n               errorList.push(\'Invalid email id\');\n           }\n       }\n       if (inputType == "url") {\n           var isUrlValid = urlRegex.test(val);\n           if (val != "" && !isUrlValid) {\n               errorList.push(\'Invalid URL\');\n           }\n       }\n       if (isRequired && !val) {\n           errorList.push(\'This field is mandatory\');\n       }\n       if (errorList.length > 0) {\n           this.showError(errorList.join("\\n"));\n           return false;\n       }\n       else {\n           this.clearError();\n           return true;\n       }\n   };\n   this.checkBarcodeCompatibility = function () {\n       var checkingString = navigator.appVersion\n       if (checkingString.includes(\'DronaHQ\')) {\n           if (DronaHQ.onAndroid || DronaHQ.onIos || DronaHQ.onWindowsPhone) {\n               if (this.model.isqrvisible) {\n                   this.$el.find(".scanner").removeClass(\'hide\');\n               }\n           } else {\n               this.$el.find(".scanner").addClass(\'hide\')\n           }\n       } else {\n           this.$el.find(".scanner").addClass(\'hide\')\n       }\n   };\n   this.showError = function (msg) {\n       var $errorMessage = this.$el.find(".fb-field-error-message");\n       this.$el.addClass("fb-field-has-error");\n       $errorMessage.text(msg);\n   };\n   this.clearError = function () {\n       var $errorMessage = this.$el.find(".fb-field-error-message");\n       this.$el.removeClass("fb-field-has-error");\n       $errorMessage.text("");\n   }\n};\nBSCOMPONENTS["text"].prototype = BaseComponent;\n')),(0,i.kt)("h3",{id:"handlebars-file"},"Handlebars File"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-handlebars"},'<script id="ctrl-template-text" type="text/x-handlebars-template">\n<div class="fb-field-wrapper response-field-{{field_type}} {{cid}} {{#if hidden}}hide{{/if}} {{#if field_fullview}} fb-fullview-field {{/if}} {{#if field_responsive}}fb-responsive-field{{/if}} {{#if disabled}}isDisabled{{/if}}" data-control="text" data-requiredfield="{{required}}" style="position:relative">\n   <div class="component-loader hide {{#if disabled}}{{else}} isLoaderWhite{{/if}} ">\n       <i class=" notched circle loading icon"></i>\n   </div>\n   <div class="component-head-container {{#if label}}{{else}}{{#if required}}{{else}}hide{{/if}}{{/if}}" aria-label="{{label}}" role="heading">\n       <span>{{#if label_hidden}}{{else}}{{label}}{{/if}}{{#if required}}<span class="requiredAstrick">*</span>{{/if}}</span>\n   </div>\n   <div class="wrapper {{#if disabled}}isDisabled{{/if}}">\n       <div class="ui input">\n           <input id="input-{{cid}}" {{#ifCond input_type \'==\' \'password\'}}type="password" {{else}} type="text" {{/ifCond}} minlength="{{text_min_length}}" maxlength="{{text_max_length}}" data-localize="{{placeholder}}" placeholder="{{placeholder}}" value="{{value}}" {{#if disabled}} disabled{{/if}}>\n           <div  class="scanner {{#if isqrvisible}}{{else}}hide{{/if}}" style="display:none">\n               <img src="images/qrcode.svg" style="height: 28px;">\n           </div>\n       </div>\n   </div>\n   <div class="fb-field-error-message">\n   </div>\n</div>\n<\/script>\n')),(0,i.kt)("h2",{id:"non_input-control---button"},"Non_input Control :- Button"),(0,i.kt)("figure",null,(0,i.kt)(a.Z,{src:"/img/advanced-concepts/custom-control-ide/sample-controls/sample-controls-non-input.png",alt:"Simple Database GUI",mdxType:"Image"}),(0,i.kt)("figcaption",{align:"center"},(0,i.kt)("i",null,"Non-Input Control - Button."))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Code")," :- "),(0,i.kt)("h3",{id:"coffee_-file"},"Coffee_ File"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-coffee"},'Formbuilder.registerField \'Button1\',\ngroup: \'Button\'\norder: 18\ntype: \'non_input\'\nview: """\n <div class="fb-field-wrapper control-body-style <%= rf.get(\'cid\') %>" >\n        <div class="wrapper">\n            <div class=\'control-button <%= rf.get(\'card_theme\') %>\'>   \n           </div>\n        </div>\n    </div>\n<style>\n.<%= rf.get(\'cid\') %> .wrapper {\n   height: 100%;\n   <% if(rf.get(\'isDhqGridCtrl\')) { %>\n   display: flex;\n   <%}%>\n}\n.<%= rf.get(\'cid\') %> .control-button\n{\n    box-shadow: none;\n   font-weight: <%= rf.get(\'title_font_weight\') %>;\n   border-radius: <%= rf.get(\'card_border_radius\') %><%= rf.get(\'card_border_radius_unit\') %> !important;\n   padding: 10px 5px;\n   width: 100%;\n   height:auto;\n    color: <%= rf.get(\'title_text_color\') %>;\n   background: <%= rf.get(\'title_background_color\') %>;\n    font-size: <%= rf.get(\'title_font_size\') %><%= rf.get(\'title_font_size_unit\') %>;\n    line-height: <%= rf.get(\'title_font_size\') %><%= rf.get(\'title_font_size_unit\') %>;\n   min-height:40px;\n   width: -webkit-fill-available;\n   margin: 0px;\n   display: flex;\n   align-items: center;\n    justify-content : <% if(rf.get(\'title_text_alignment\') == "right") {%> flex-end <%}else{%> <%= rf.get(\'title_text_alignment\') %> <%}%>;\n}\n.<%= rf.get(\'cid\') %> .hide {\n    display:none;\n}\n.<%= rf.get(\'cid\') %> .filled-theme{\n        border: none;\n        border: 1px solid <%= rf.get(\'card_background_color\') %>;\n        background: <%= rf.get(\'card_background_color\') %>;\n}\n.<%= rf.get(\'cid\') %> .outlined-theme{\n   background-color: transparent;\n   border: 1px solid <%= Formbuilder.helpers.single_color(rf.get(\'card_background_color\')) %>;\n}\n</style>\n<script>\n  \n<\/script>\n"""\n \nedit: """\n<div class="category-section">\n   <div class="ui accordion edit-accordion">\n       <div class="title active header-accordion">\n           Properties<span class="caret"></span>\n       </div>\n       <div class="content active">\n           <div class="accordion-content-inner">\n               <div class="form-group ui grid" style="height: auto; min-height: 44px; display: flex !important;">\n                   <label for="" style="color: #969696;font-size: 10px;font-weight: 500;" class="five wide column p-l-0 theme">Control ID</label>\n                   <div class="form-control eleven wide column">\n                       <label style="display: flex;align-items: center;height: 32px;border-radius: 5px;position: relative;border: 1px solid #e0e0e0;box-shadow: inset 0 -1px 1px rgb(0 0 0 / 3%), inset 0 1px 1px rgb(0 0 0 / 6%);" class="disabled-label-input" disabled=""><%= rf.get(\'cid\')%></label>\n                       <a href="#" title="copy to clipboard" class="copy-to-clipboard" data-value="<%= rf.get(\'cid\')%>">\n                           <i class="icon-docs icons"></i>\n                       </a>\n                   </div>\n               </div>\n               <div class="edit_view_ctrl_prop ">\n                   <%= Formbuilder.templates[\'edit/text_input\']({\n                       "label": {name:"Text", position:"left", width:""},\n                       "name": "button_label",\n                       "col_width":"two_col"\n                   }) %>\n                   <%= Formbuilder.templates[\'edit/toggle\']({\n                       "label": {name:"Show Icon", position:"top", width:""},\n                       "name": "icon_visible",\n                   }) %>\n                   <%= Formbuilder.templates[\'edit/dropdown_new\']({\n                       "label": {name:"Icon Position", position:"top"},\n                       "name": "side_to_display",\n                       "values" :[{"Right":"right"},{"Left":"left"}],\n                       "col_width":"two_col",\n                       "isMultiselect":false,\n                       "showOn":"model.icon_visible"\n                   }) %>\n                   <%= Formbuilder.templates[\'edit/icon_picker\']({\n                       "label": {name:"Select Icon", position:"left"},\n                       "name": "workflow_icon",\n                       "col_width":"two_col",\n                       "showOn":"model.icon_visible"\n                   }) %>                  \n               </div>\n               <div class="form-group ui grid flex-center hide" style="height:auto;min-height:44px;">\n                   <label for="" class="six wide column p-l-0">Action</label>\n                   <div class="form-control ten wide column">\n                       <div class="form-control selection ui dropdown ten wide column" tabindex="0">\n                           <select data-rv-value="model.button_type">\n                               <option value="no_action">\n                                   No Action\n                               </option>\n                               <option value="phone">\n                                   Phone Number\n                               </option>\n                               <option value="mail">\n                                   Mail\n                               </option>\n                               <option value="dhq_app_exit">\n                                   Exit App\n                               </option>\n                           </select><i class="dropdown icon"></i>\n                           <div class="text">Mail</div>\n                           <div class="menu transition hidden" tabindex="-1">\n                               <div class="item" data-value="no_action">\n                                   No Action\n                               </div>\n                               <div class="item" data-value="phone">\n                                   Phone Number\n                               </div>\n                               <div class="item active selected" data-value="mail">\n                                   Mail\n                               </div>\n                               <div class="item" data-value="dhq_app_exit">\n                                   Exit App\n                               </div>\n                           </div>\n                       </div>\n                   </div>\n               </div>\n               <div class="form-group ui grid flex-center" data-rv-show="model.button_type | eq phone">\n                   <label class="six wide column p-l-0">\n                       <abbr title=\'required\'>Phone Number</abbr>\n                   </label>\n                   <div class="form-control ten wide column">\n                       <input type="text" data-rv-input="model.button_value" />\n                   </div>\n               </div>\n               <div class="form-group ui grid flex-center" data-rv-show="model.button_type | eq mail">\n                   <label class="six wide column p-l-0">\n                       <abbr title=\'required\'>Email Address</abbr>\n                   </label>\n                   <div class="form-control ten wide column">\n                       <input type="text" data-rv-input="model.mailto_to" />\n                   </div>\n               </div>\n           </div>\n       </div>\n   </div>\n</div>\n<div class="category-section">\n   <div class="ui accordion edit-accordion">\n       <div class="title active header-accordion">\n           Style<span class="caret"></span>\n       </div>\n       <div class="content active" style="overflow: visible;">\n           <div class="accordion-content-inner">\n                   <div class="edit_view_ctrl_prop prop_group">\n                       <label class="prop_group_label">TEXT </label>\n                       <%= Formbuilder.templates[\'edit/numberPickerWithUnit\']({\n                           "label":  {name:"Size"},\n                           "name": "title_font_size",\n                           "disableUnit": true,\n                           "steps": "1",\n                            "max": "1000",\n                            "min": "0",\n                        }) %>\n                       <%= Formbuilder.templates[\'edit/font_weight\']({\n                           "label":  {name:"Weight"},\n                           "name": "title_font_weight",\n                       }) %>       \n                       <%= Formbuilder.templates[\'edit/color_picker\']({\n                           "label": {name:"Color", position:"top", width:""},\n                           "name": "title_text_color",\n                           "solid_color_only" : true\n                       }) %>\n                       <%= Formbuilder.templates[\'edit/selectbar\']({\n                           "label": {name:"Alingment", position:"top"},\n                           "name": "title_text_alignment",\n                           "Icon_type":"icon",    \n                           "col_width":"three_col",\n                       }) %>\n                  </div>\n                    <div class="edit_view_ctrl_prop prop_group">\n                        <label class="prop_group_label">BACKGROUND PROPERTY</label>\n \n                      <%= Formbuilder.templates[\'edit/color_picker\']({\n                           "label": {name:"Color", position:"top", width:""},\n                           "name": "card_background_color",\n                       }) %>\n                        <%= Formbuilder.templates[\'edit/numberPickerWithUnit\']({\n                           "label":  {name:"Radius"},\n                           "name": "card_border_radius",\n                           "disableUnit": false,\n                           "steps": "1",\n                            "max": "1000",\n                            "min": "0",\n                        }) %>\n                      <%= Formbuilder.templates[\'edit/dropdown_new\']({\n                           "label": {name:"Theme ", position:"top", width:""},\n                           "name": "card_theme",\n                           "values" :[{"Filled":"filled-theme"},{"Outlined":"outlined-theme"}],\n                           "col_width":"",\n                           "isMultiselect":false,\n                       }) %>\n                   </div>\n           </div>\n       </div>\n   </div>\n</div>\n"""\nviewJs : ($el,model,optn) ->\n   obj = model.get(\'LiveData\')|| "";\n   iconContainer = if model.get(\'icon_visible\') && model.get(\'workflow_icon\') then model.get(\'workflow_icon\') else "";\n   iconTemplate = "";\n   button_label = if obj then obj else model.get(\'button_label\')\n   if model.get(\'side_to_display\')== "right"\n       iconTemplate = ""+button_label+"<span class=\'right_side\' style=\'margin-left:8px;\'><i class=\'"+iconContainer+"\'</i></span>";\n   else\n       iconTemplate = "<span class=\'left_side\' style=\'margin-right:8px;\'><i class=\'"+iconContainer+"\'></i></span>"+button_label+"";\n   $el.find(".control-button").html(iconTemplate);\n \naddButton: """\n   <span class="symbol">\n            <span class="symbol-icon-box">\n       <img src="app/src/images/controls/action_button.svg" />\n            </span>\n     <span class="clabel">Action1</span>\n </span>\n"""\n \ngridConfiguration:\n minWidth: 1,\n maxWidth: 24,\n minHeight: 5,\n maxHeight: 0,\n defaultHeight: 5,\n defaultWidth: 12,\n isWidthResizable: true,\n isHeightResizable: true\n \ndefaultAttributes: (attrs) ->\n attrs.title_font_size = 16\n attrs.title_font_size_unit = \'px\'\n attrs.title_text_color = \'#ffffff\'\n attrs.title_text_alignment = \'center\'\n attrs.title_font_weight = 500\n attrs.card_background_color = \'#28bc6a\'\n attrs.card_theme = \'filled-theme\'\n attrs.workflow_icon = "fas fa-arrow-right"\n attrs.side_to_display = "right"\n attrs.card_border_radius = 5\n attrs.card_border_radius_unit = \'px\'\n attrs.button_label = \'ACTION\'\n attrs.button_type = \'no_action\'\n attrs.button_value = \'\'\n attrs.is_button = true\n attrs.icon_visible = false\n attrs.label_hidden = true\n attrs.navigation_enabled = false\n attrs.navigate_to = \'\'\n attrs.navigation_transition = \'\'\n attrs.mailto_to = \'name@domain.com\'\n attrs.mailto_subject = \'subject\'\n attrs.mailto_body = \'Hi\'\n attrs.is_navigation_control = true\n attrs.submit_from_pages = \'\'\n attrs.formbuilder_theme = \'var(--theme-color-light)\'\n #CTRL METADATA CONFIGURATION\n attrs.field_composition_type = "single"\n attrs.data_type = "string"\n attrs.LiveData = \'\'\n attrs.field_database_editor_data_format = "single_line_text"\n attrs.field_available_in_database_editor = false\n attrs.field_editable_in_database_editor = true\n attrs.event_items = {\n   button_click: {\n     \'click\': [{\n       "formula_with_id": "",\n       "formula_with_name": ""\n       }]\n   }\n }\n attrs.action_items = {\n   "button_click": {\n     "events": ["click"],\n     "selector": ".control-button"\n   }\n }\n attrs.field_datatypes = []\n attrs\n')),(0,i.kt)("h3",{id:"css_-file"},"CSS_ File"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-css"},'.{{cid}} .component-head-container {\n font-size: {{label_font_size}}{{label_font_size_unit}};\n font-weight: {{label_font_weight}};\n color: {{label_text_color}};\n text-align: {{label_text_alignment}};\n}\n.{{cid}} .control-button\n{\n    box-shadow: none;\n   font-weight: {{title_font_weight}};\n   border-radius: {{card_border_radius}}{{card_border_radius_unit}} !important;\n   padding: 10px 5px;\n   width: 100%;\n   height: auto;\n    color: {{title_text_color}}  !important;\n   background: {{title_background_color}};\n    font-size: {{title_font_size}}{{title_font_size_unit}};\n   min-height:40px;\n   width: -webkit-fill-available;\n   margin: 0px;\n   cursor:pointer;\n   display: flex;\n   align-items: center;\n    justify-content : {{#ifCond  title_text_alignment "==" "right"}}flex-end{{else}}{{title_text_alignment}}{{/ifCond}};\n}\n.{{cid}} .wrapper{\n   {{#if isDhqGridCtrl}}\n   display: flex;\n   {{/if}}\n}\n.{{cid}} .hide {\n    display:none;\n}\n.{{cid}} .filled-theme{\n        border: none;\n        border: 1px solid {{single_color card_background_color}};\n        background: {{card_background_color}} !important;\n}\n.{{cid}} .outlined-theme{\n   background-color: transparent;\n border: 1px solid {{single_color card_background_color}} !important;\n}\n')),(0,i.kt)("h3",{id:"javascript_-file"},"Javascript_ File"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'BSCOMPONENTS["Button1"] = function() {\n   this.$el = "";\n   this.initComponent = function() {\n       var self = this\n       var model = this.model;\n       // var flow = this.model.actionflows.button_click;\n       this.$el.find(\'.control-button\').on(\'click\',function(e){\n           e.stopPropagation();\n           triggerAction(self.model.field_key_name,\'button_click\',\'click\',e);\n           //newActionExecute(flow, e, model);\n       });\n       this.showIcon();\n       this.EventManager.publish("setimeout", "some custom data");\n   };\n   this.setValue = function(value) {\n       this.showIcon(value);\n   }\n   this.showIcon = function(textValue){\n       iconContainer = this.model.icon_visible && this.model.workflow_icon ? this.model.workflow_icon : "";\n       itemLabel = ""\n       if(!textValue){\n           itemLabel = this.model.button_label\n       }\n       else\n           itemLabel = textValue;\n       iconTemplate = "";\n       if (this.model.side_to_display == "right"){\n           iconTemplate = ""+itemLabel+"<span class=\'right_side\' style=\'margin-left:8px;\'><i class=\'"+iconContainer+"\'</i></span>";\n       }else{\n           iconTemplate = "<span class=\'left_side\' style=\'margin-right:8px;\'><i class=\'"+iconContainer+"\'></i></span>"+itemLabel+"";\n       }\n       this.$el.find(".control-button").html(iconTemplate);\n   }\n};\nBSCOMPONENTS["Button1"].prototype = BaseComponent;\n')),(0,i.kt)("h3",{id:"handlebars_file"},"Handlebars_File"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-handlebars"},'<script id="ctrl-template-Button1" type="text/x-handlebars-template">\n<div class="fb-field-wrapper  control-body-style response-field-{{field_type}} {{cid}} {{#if hidden}}hide{{/if}} {{#if field_fullview}} fb-fullview-field {{/if}} {{#if field_responsive}}fb-responsive-field{{/if}}" data-requiredfield="{{required}}">\n<div class="component-loader hide {{#if disabled}}{{else}} isLoaderWhite{{/if}} ">\n       <i class=" notched circle loading icon"></i>\n   </div>\n       <div class="component-head-container {{#if label}}{{else}}{{#if required}}{{else}}hide{{/if}}{{/if}}">\n       <span>{{#if label_hidden}}{{else}}{{label}}{{/if}}{{#if required}}<span class="requiredAstrick">*</span>{{/if}}</span>\n   </div>\n    <div class="wrapper">\n   <div class=\'ui button control-button {{card_theme}} button-{{cid}} {{cid}}\'> {{button_label}}</div>\n    </div>\n</div>\n<\/script>\n')))}m.isMDXComponent=!0}}]);