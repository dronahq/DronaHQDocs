"use strict";(self.webpackChunkdronahq_docs=self.webpackChunkdronahq_docs||[]).push([[24636],{92430:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>d});a(67294);var n=a(3905);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))})),e}function i(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}const s={sidebar_position:1},u="Getting basic values",o={unversionedId:"reference/dronahq-query-language/getting-basic-values",id:"reference/dronahq-query-language/getting-basic-values",title:"Getting basic values",description:"DQL uses location path syntax to extract values from JSON structures. The following examples demonstrate several examples of getting basic values from JSON data.",source:"@site/docs/reference/dronahq-query-language/getting-basic-values.md",sourceDirName:"reference/dronahq-query-language",slug:"/reference/dronahq-query-language/getting-basic-values",permalink:"/reference/dronahq-query-language/getting-basic-values",draft:!1,tags:[],version:"current",lastUpdatedAt:1700468299,formattedLastUpdatedAt:"Nov 20, 2023",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docSidebar",previous:{title:"DronaHQ Query language (DQL)",permalink:"/category/dronahq-query-language-dql"},next:{title:"Selecting conditional data",permalink:"/reference/dronahq-query-language/selecting-conditional-data"}},c={},d=[{value:"Contents",id:"contents",level:2},{value:"Example JSON",id:"example-json",level:2},{value:"Get a top-level field",id:"get-a-top-level-field",level:2},{value:"DQL",id:"dql",level:5},{value:"Result",id:"result",level:5},{value:"Get a nested field",id:"get-a-nested-field",level:2},{value:"DQL",id:"dql-1",level:5},{value:"Result",id:"result-1",level:5},{value:"Get an entire object",id:"get-an-entire-object",level:2},{value:"DQL",id:"dql-2",level:5},{value:"Result",id:"result-2",level:5},{value:"Select a specific index in an array",id:"select-a-specific-index-in-an-array",level:2},{value:"DQL",id:"dql-3",level:5},{value:"Result",id:"result-3",level:5},{value:"Select an entire array",id:"select-an-entire-array",level:2},{value:"DQL",id:"dql-4",level:5},{value:"Result",id:"result-4",level:5},{value:"Return one field of every object in an array",id:"return-one-field-of-every-object-in-an-array",level:2},{value:"DQL",id:"dql-5",level:5},{value:"Result",id:"result-5",level:5},{value:"Return fields that contain special characters in an array",id:"return-fields-that-contain-special-characters-in-an-array",level:2},{value:"DQL",id:"dql-6",level:5},{value:"Result",id:"result-6",level:5},{value:"Get the number of elements in the list",id:"get-the-number-of-elements-in-the-list",level:2},{value:"DQL",id:"dql-7",level:5},{value:"Result",id:"result-7",level:5}],p={toc:d},m="wrapper";function h(e){var{components:t}=e,a=i(e,["components"]);return(0,n.kt)(m,r(function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{},n=Object.keys(a);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(a).filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable})))),n.forEach((function(t){l(e,t,a[t])}))}return e}({},p,a),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"getting-basic-values"},"Getting basic values"),(0,n.kt)("p",null,"DQL uses location path syntax to extract values from JSON structures. The following examples demonstrate several examples of getting basic values from JSON data."),(0,n.kt)("h2",{id:"contents"},"Contents"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#example-json"},"Example JSON")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#get-a-top-level-field"},"Get a top-level field")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#get-a-nested-field"},"Get a nested field")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#get-an-entire-object"},"Get an entire object")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#select-a-specific-index-in-an-array"},"Select a specific index in an array")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#select-an-entire-array"},"Select an entire array")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#return-one-field-of-every-object-in-an-array"},"Return one field of every object in an array")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#return-fields-that-contain-special-characters-in-an-array"},"Return fields that contain special characters in the key name")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#get-the-number-of-elements-in-the-list"},"Get the number of elements in the list"))),(0,n.kt)("h2",{id:"example-json"},"Example JSON"),(0,n.kt)("p",null,"The examples below use this JSON data:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "John Smith",\n    "address": {\n        "street": "123 Park Avenue",\n        "city": "Atlanta",\n        "state": "GA",\n        "zip": "12345"\n    },\n    "phones": [\n        {\n            "type": "Home",\n            "number": "123-456-7890"\n        },\n        {\n            "type": "Cell",\n            "number": "098-765-4321"\n        }\n    ],\n    "display name": "myuser123"\n}\n')),(0,n.kt)("h2",{id:"get-a-top-level-field"},"Get a top-level field"),(0,n.kt)("p",null,"To access a top-level field with DQL, enter the field's name."),(0,n.kt)("h5",{id:"dql"},"DQL"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"}," name\n")),(0,n.kt)("h5",{id:"result"},"Result"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'"John Smith"\n')),(0,n.kt)("h2",{id:"get-a-nested-field"},"Get a nested field"),(0,n.kt)("p",null,"To access fields below the top level, use field names separated by dot . delimiters."),(0,n.kt)("h5",{id:"dql-1"},"DQL"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"}," address.city\n")),(0,n.kt)("h5",{id:"result-1"},"Result"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'"Atlanta"\n')),(0,n.kt)("h2",{id:"get-an-entire-object"},"Get an entire object"),(0,n.kt)("p",null,"Enter the name of an object in the JSON file to retrieve all the data within that object."),(0,n.kt)("h5",{id:"dql-2"},"DQL"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"}," address\n")),(0,n.kt)("h5",{id:"result-2"},"Result"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"{\n    street: '123 Park Avenue',\n    city: 'Atlanta',\n    state: 'GA',\n    zip: '12345',\n}\n")),(0,n.kt)("h2",{id:"select-a-specific-index-in-an-array"},"Select a specific index in an array"),(0,n.kt)("p",null,"To access individual values in an array in a JSON file, specify an index number between square brackets after the array's name."),(0,n.kt)("h5",{id:"dql-3"},"DQL"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"}," phones[0].number\n")),(0,n.kt)("h5",{id:"result-3"},"Result"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'"123-456-7890"\n')),(0,n.kt)("h2",{id:"select-an-entire-array"},"Select an entire array"),(0,n.kt)("p",null,"Enter the name of an array in the JSON file to retrieve all the data within that array."),(0,n.kt)("h5",{id:"dql-4"},"DQL"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"}," phones\n")),(0,n.kt)("h5",{id:"result-4"},"Result"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'[\n    {\n        "type": "Home",\n        "number": "123-456-7890"\n    },\n    {\n        "type": "Cell",\n        "number": "098-765-4321"\n    }\n]\n')),(0,n.kt)("h2",{id:"return-one-field-of-every-object-in-an-array"},"Return one field of every object in an array"),(0,n.kt)("p",null,"To return a specific field from multiple objects in an array, enter the array's name then the field's name, separated by a dot."),(0,n.kt)("h5",{id:"dql-5"},"DQL"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"phones.number\n")),(0,n.kt)("h5",{id:"result-5"},"Result"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'["123-456-7890","098-765-4321"]\n')),(0,n.kt)("h2",{id:"return-fields-that-contain-special-characters-in-an-array"},"Return fields that contain special characters in an array"),(0,n.kt)("p",null,"If a field in the JSON file contains special characters (like spaces), put the field's name in single quotes."),(0,n.kt)("h5",{id:"dql-6"},"DQL"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"'display name'\n")),(0,n.kt)("h5",{id:"result-6"},"Result"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"myuser123\n")),(0,n.kt)("h2",{id:"get-the-number-of-elements-in-the-list"},"Get the number of elements in the list"),(0,n.kt)("h5",{id:"dql-7"},"DQL"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"$count(phones)\n")),(0,n.kt)("h5",{id:"result-7"},"Result"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"2\n")))}h.isMDXComponent=!0}}]);