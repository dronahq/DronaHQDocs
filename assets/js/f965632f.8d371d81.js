"use strict";(self.webpackChunkdronahq_docs=self.webpackChunkdronahq_docs||[]).push([[42197],{69614:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>u,metadata:()=>c,toc:()=>p});r(67294);var n=r(3905),a=r(86291);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}const u={sidebar_position:1,title:"Query JSON using SQL"},l="Query JSON using SQL",c={unversionedId:"binding-data/data-queries/query-json-using-sql",id:"binding-data/data-queries/query-json-using-sql",title:"Query JSON using SQL",description:"You can seamlessly query data from non-SQL sources as SQL using DronaHQ's built-in Query JSON with SQL. It harnesses the power of AlaSQL, which employs its own syntax that differs from traditional SQL. For instance, AlaSQL uses square brackets or backticks to enclose column names containing whitespace, in contrast to double quotes. To explore further details, you can refer to the AlaSQL docs.",source:"@site/docs/binding-data/data-queries/query-json-using-sql.md",sourceDirName:"binding-data/data-queries",slug:"/binding-data/data-queries/query-json-using-sql",permalink:"/binding-data/data-queries/query-json-using-sql",draft:!1,tags:[],version:"current",lastUpdatedAt:1720087754,formattedLastUpdatedAt:"Jul 4, 2024",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Query JSON using SQL"},sidebar:"docSidebar",previous:{title:"PDF Creator",permalink:"/binding-data/data-queries/pdf-creator"},next:{title:"Variable",permalink:"/binding-data/data-queries/variable"}},d={},p=[{value:"Example1: Query Raw JSON",id:"example1-query-raw-json",level:3},{value:"Example2: Join JSON arrays",id:"example2-join-json-arrays",level:3}],y={toc:p},g="wrapper";function m(e){var{components:t}=e,r=i(e,["components"]);return(0,n.kt)(g,o(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),n.forEach((function(t){s(e,t,r[t])}))}return e}({},y,r),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"query-json-using-sql"},"Query JSON using SQL"),(0,n.kt)("p",null,"You can seamlessly query data from non-SQL sources as SQL using DronaHQ's built-in Query JSON with SQL. It harnesses the power of AlaSQL, which employs its own syntax that differs from traditional SQL. For instance, AlaSQL uses square brackets or backticks to enclose column names containing whitespace, in contrast to double quotes. To explore further details, you can refer to the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/agershun/alasql/wiki/Sql"},"AlaSQL docs.")),(0,n.kt)("p",null,"To get started, simply choose 'Query JSON with SQL' in the Data query section. The Query JSON with SQL resource readily accepts an array of JSON objects within its FROM clause, making data retrieval and manipulation a breeze."),(0,n.kt)("figure",null,(0,n.kt)(a.Z,{src:"/img/data-queries/query-json-sql.png",alt:"Query JSON using SQL",width:"100%",mdxType:"Thumbnail"}),(0,n.kt)("figcaption",{align:"center"},(0,n.kt)("i",null,"Query JSON using SQL"))),(0,n.kt)("h3",{id:"example1-query-raw-json"},"Example1: Query Raw JSON"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"  select * \n  from {{ [{ age: 5, name: John }, { age: 8, name: Doe }] }} \n  where age > 6\n")),(0,n.kt)("h3",{id:"example2-join-json-arrays"},"Example2: Join JSON arrays"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"select *\nfrom {{ programs.data }} as programs\njoin {{ centers.data }} as centers\non programs.id = centers.id\n")))}m.isMDXComponent=!0}}]);