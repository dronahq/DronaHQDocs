"use strict";(self.webpackChunkdronahq_docs=self.webpackChunkdronahq_docs||[]).push([[77030],{62432:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>d,default:()=>f,frontMatter:()=>s,metadata:()=>u,toc:()=>m});a(67294);var n=a(3905),i=a(86291);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))})),e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}const s={sidebar_position:1,title:"In-App Date Calculation"},d=void 0,u={unversionedId:"building-apps-guides/date-calulation-inapp",id:"building-apps-guides/date-calulation-inapp",title:"In-App Date Calculation",description:"All dates in DronaHQ are stored in Unix Time, a standard way to represent date and time. This makes date calculations straightforward and consistent across different systems. Here, we\u2019ll explore how to calculate dates relative to today using DronaHQ's functions.",source:"@site/docs/building-apps-guides/date-calulation-inapp.md",sourceDirName:"building-apps-guides",slug:"/building-apps-guides/date-calulation-inapp",permalink:"/building-apps-guides/date-calulation-inapp",draft:!1,tags:[],version:"current",lastUpdatedAt:1715855563,formattedLastUpdatedAt:"May 16, 2024",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"In-App Date Calculation"},sidebar:"docSidebar",previous:{title:"Create and Download Excel from JSON data",permalink:"/building-apps-guides/create-download-excel-from-json"},next:{title:"Dynamic Formulas in HTML",permalink:"/building-apps-guides/date-variable-in-html"}},p={},m=[{value:"Calculating N Days Ago with Current Time Considered",id:"calculating-n-days-ago-with-current-time-considered",level:2},{value:"Where:",id:"where",level:4},{value:"Formula Breakdown",id:"formula-breakdown",level:4},{value:"Example",id:"example",level:4},{value:"Calculating N Days Ago Without Current Time",id:"calculating-n-days-ago-without-current-time",level:2},{value:"Where:",id:"where-1",level:4},{value:"Formula Breakdown",id:"formula-breakdown-1",level:4},{value:"Example",id:"example-1",level:4},{value:"More Information",id:"more-information",level:3}],c={toc:m},h="wrapper";function f(e){var{components:t}=e,a=l(e,["components"]);return(0,n.kt)(h,o(function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{},n=Object.keys(a);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(a).filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable})))),n.forEach((function(t){r(e,t,a[t])}))}return e}({},c,a),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"All dates in DronaHQ are stored in ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Unix_time"},"Unix Time"),", a standard way to represent date and time. This makes date calculations straightforward and consistent across different systems. Here, we\u2019ll explore how to calculate dates relative to today using DronaHQ's functions."),(0,n.kt)("h2",{id:"calculating-n-days-ago-with-current-time-considered"},"Calculating N Days Ago with Current Time Considered"),(0,n.kt)("p",null,"To find the date N days ago from today, including the current time, you can use the following formula and bind it to a ",(0,n.kt)("inlineCode",{parentName:"p"},"DateTime")," control:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-plaintext"},"STRTOUNIX(TODAY()) - N * 24 * 60 * 60 * 1000\n")),(0,n.kt)("h4",{id:"where"},"Where:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"N")," is the number of days before today.")),(0,n.kt)("p",null,"This formula accounts for the current time in its result."),(0,n.kt)("h4",{id:"formula-breakdown"},"Formula Breakdown"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"TODAY(): Returns the current date and time as a Date object."),(0,n.kt)("li",{parentName:"ul"},"STRTOUNIX(TODAY()): Converts the Date object to Unix Time (in milliseconds)."),(0,n.kt)("li",{parentName:"ul"},"N ",(0,n.kt)("em",{parentName:"li"}," 24 ")," 60 ",(0,n.kt)("em",{parentName:"li"}," 60 ")," 1000: Calculates the number of milliseconds in N days (since one day = 24 hours ",(0,n.kt)("em",{parentName:"li"}," 60 minutes ")," 60 seconds * 1000 milliseconds).")),(0,n.kt)("h4",{id:"example"},"Example"),(0,n.kt)("p",null,"For ",(0,n.kt)("inlineCode",{parentName:"p"},"N=2"),", compare the outputs of two DateTime controls: one with the formula ",(0,n.kt)("inlineCode",{parentName:"p"},"TODAY()")," and the other with ",(0,n.kt)("inlineCode",{parentName:"p"},"STRTOUNIX(TODAY()) - 2 * 24 * 60 * 60 * 1000"),"."),(0,n.kt)("figure",null,(0,n.kt)(i.Z,{src:"/img/building-apps-guides/in-app-date-calculation/example1.png",alt:"",mdxType:"Thumbnail"})),(0,n.kt)("h2",{id:"calculating-n-days-ago-without-current-time"},"Calculating N Days Ago Without Current Time"),(0,n.kt)("p",null,"To find the date N days ago from today, ignoring the current time, use this formula and bind it to a ",(0,n.kt)("inlineCode",{parentName:"p"},"Date")," control:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-plaintext"},'STRTOUNIX(DATESTR(TODAY(), "DD-MM-YYYY"), "DD-MM-YYYY") - N * 24 * 60 * 60 * 1000\n')),(0,n.kt)("h4",{id:"where-1"},"Where:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"N")," is the number of days before today.")),(0,n.kt)("p",null,"This formula does not consider the current time of the day."),(0,n.kt)("h4",{id:"formula-breakdown-1"},"Formula Breakdown"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"TODAY(): Returns the current date and time as a Date object."),(0,n.kt)("li",{parentName:"ul"},'DATESTR(TODAY(), "DD-MM-YYYY"): Converts the Date object to a string in the format "DD-MM-YYYY".'),(0,n.kt)("li",{parentName:"ul"},'STRTOUNIX(DATESTR(TODAY(), "DD-MM-YYYY"), "DD-MM-YYYY"): Converts the date string back to Unix Time, ignoring the time of day.'),(0,n.kt)("li",{parentName:"ul"},"N ",(0,n.kt)("em",{parentName:"li"}," 24 ")," 60 ",(0,n.kt)("em",{parentName:"li"}," 60 ")," 1000: Subtracts the number of milliseconds in N days.")),(0,n.kt)("h4",{id:"example-1"},"Example"),(0,n.kt)("p",null,"For ",(0,n.kt)("inlineCode",{parentName:"p"},"N=2"),", compare the outputs of a DateTime control with ",(0,n.kt)("inlineCode",{parentName:"p"},"TODAY()")," and two Date controls: one with ",(0,n.kt)("inlineCode",{parentName:"p"},"TODAY()")," and another with ",(0,n.kt)("inlineCode",{parentName:"p"},'STRTOUNIX(DATESTR(TODAY(), "DD-MM-YYYY"), "DD-MM-YYYY") - 2 * 24 * 60 * 60 * 1000'),"."),(0,n.kt)("figure",null,(0,n.kt)(i.Z,{src:"/img/building-apps-guides/in-app-date-calculation/example2.png",alt:"",mdxType:"Thumbnail"})),(0,n.kt)("p",null,"The third Date control shows the time set to 12:00 AM, indicating no time of day is considered. This may vary depending on your timezone, as DateTime controls display local time by default."),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"For calculating N days after today, simply add the days instead of subtracting:"),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-plaintext"},"STRTOUNIX(TODAY()) + N * 24 * 60 * 60 * 1000\n"))),(0,n.kt)("h3",{id:"more-information"},"More Information"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"DATESTR Function:")," Learn more ",(0,n.kt)("a",{parentName:"li",href:"https://docs.dronahq.com/reference/keywords-js-utilities/fx-formulas/#datestr"},"here"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"STRTOUNIX Function:")," Learn more ",(0,n.kt)("a",{parentName:"li",href:"https://docs.dronahq.com/reference/keywords-js-utilities/fx-formulas/#strtounix"},"here"),".")))}f.isMDXComponent=!0}}]);