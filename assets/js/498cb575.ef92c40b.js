"use strict";(self.webpackChunkdronahq_docs=self.webpackChunkdronahq_docs||[]).push([[68260],{15171:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>p});n(67294);var o=n(3905),a=n(86291);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function c(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const l={sidebar_position:1},s="JS Code",d={unversionedId:"reference/actionflow-blocks/js-code",id:"reference/actionflow-blocks/js-code",title:"JS Code",description:"The Logic Block provides you with tasks that are based on logical actions. You have here the Branch task, Delay task, Compute Task, and JSCode",source:"@site/docs/reference/actionflow-blocks/js-code.md",sourceDirName:"reference/actionflow-blocks",slug:"/reference/actionflow-blocks/js-code",permalink:"/reference/actionflow-blocks/js-code",draft:!1,tags:[],version:"current",lastUpdatedAt:1696420123,formattedLastUpdatedAt:"Oct 4, 2023",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docSidebar",previous:{title:"Iterate Tasks",permalink:"/reference/actionflow-blocks/iterate-task"},next:{title:"Logout",permalink:"/reference/actionflow-blocks/logout"}},u={},p=[],f={toc:p},k="wrapper";function h(e){var{components:t}=e,n=c(e,["components"]);return(0,o.kt)(k,i(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},o=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),o.forEach((function(t){r(e,t,n[t])}))}return e}({},f,n),{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"js-code"},"JS Code"),(0,o.kt)("p",null,"The Logic Block provides you with tasks that are based on logical actions. You have here the ",(0,o.kt)("inlineCode",{parentName:"p"},"Branch task, Delay task, Compute Task, and JSCode")),(0,o.kt)("figure",null,(0,o.kt)(a.Z,{src:"/img/reference/actionflow-blocks/js-code/jscode-list.jpg",alt:"JSCode",mdxType:"Thumbnail"}),(0,o.kt)("figcaption",{align:"center"},(0,o.kt)("i",null,"JSCode"))),(0,o.kt)("br",null),(0,o.kt)("p",null,"The JS Code task allows you to add a block of JavaScript code to perform a custom action as part of the action flow. It thus enables interaction between different DronaHQ components and tasks. "),(0,o.kt)("p",null,"Let us take a simple example to generate a tax invoice for a product. The total tax needs to be computed based on a range. So in this case you need a JavaScript that checks the Taxable amount within the defined slabs and calculates the tax and the total invoice amount."),(0,o.kt)("figure",null,(0,o.kt)(a.Z,{src:"/img/reference/actionflow-blocks/js-code/generate-invoice-form.jpg",alt:"Generate Invoice Form",mdxType:"Thumbnail"}),(0,o.kt)("figcaption",{align:"center"},(0,o.kt)("i",null,"Generate Invoice Form"))),(0,o.kt)("p",null,"So in this example, the JS Code block would contain a certain code that gets the ",(0,o.kt)("inlineCode",{parentName:"p"},"Taxable Amount")," as the input value. ",(0,o.kt)("inlineCode",{parentName:"p"},"Taxable amount")," is derived as ",(0,o.kt)("inlineCode",{parentName:"p"},"Quantity * Price"),"."),(0,o.kt)("p",null,"In this example, the tax would be calculated and the total invoice amount displayed. The Invoice would be generated based on a PDF template created. Here we have added the JS Code from the Logic block and entered the respective JavaScript code. The input parameter is defined as ",(0,o.kt)("inlineCode",{parentName:"p"},"taxamt")," which gets the value from the numeric control ",(0,o.kt)("inlineCode",{parentName:"p"},"taxableamount"),".  The input parameters are defined as Name, Keyword, Data type, and a Test value. You can as many input parameters as required. The ",(0,o.kt)("inlineCode",{parentName:"p"},"output")," is the value returned as a result of the functioning of the JavaScript. The ",(0,o.kt)("inlineCode",{parentName:"p"},"amount of Tax is the Output"),"  returned in this case to the response variable ",(0,o.kt)("inlineCode",{parentName:"p"},"invoiceamt1"),"."),(0,o.kt)("figure",null,(0,o.kt)(a.Z,{src:"/img/reference/actionflow-blocks/js-code/jscode.jpg",alt:"JSCode",mdxType:"Thumbnail"}),(0,o.kt)("figcaption",{align:"center"},(0,o.kt)("i",null,"JSCode"))),(0,o.kt)("p",null,"In this example, we have included the compute block to set values for the tax and the total invoice amount which would then be used in the PDF Creator configuration."),(0,o.kt)("figure",null,(0,o.kt)(a.Z,{src:"/img/reference/actionflow-blocks/js-code/pdfcreator.jpg",alt:"PDF Creator",mdxType:"Thumbnail"}),(0,o.kt)("figcaption",{align:"center"},(0,o.kt)("i",null,"PDF Creator"))),(0,o.kt)("p",null,"The JS Code task will be a part of the Action flow components with values computed used in different actions."),(0,o.kt)("figure",null,(0,o.kt)(a.Z,{src:"/img/reference/actionflow-blocks/js-code/actionflow.jpg",alt:"Actionflow",mdxType:"Thumbnail"}),(0,o.kt)("figcaption",{align:"center"},(0,o.kt)("i",null,"Actionflow"))),(0,o.kt)("p",null,"The invoice would be generated as seen in the preview below with the tax amount displayed accordingly."),(0,o.kt)("figure",null,(0,o.kt)(a.Z,{src:"/img/reference/actionflow-blocks/js-code/invoice-generated.jpg",alt:"Generated Invoice",mdxType:"Thumbnail"}),(0,o.kt)("figcaption",{align:"center"},(0,o.kt)("i",null,"Generated Invoice"))))}h.isMDXComponent=!0}}]);