"use strict";(self.webpackChunkdronahq_docs=self.webpackChunkdronahq_docs||[]).push([[67120],{66598:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>u,toc:()=>d});n(67294);var r=n(3905),a=n(86291);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const s={sidebar_position:1,title:"gRPC"},c=void 0,u={unversionedId:"reference/connectors/grpc",id:"reference/connectors/grpc",title:"gRPC",description:"gRPC is a robust open-source high performance Remote Procedure Call (RPC) framework used to develop scalable and fast APIs. The core concept in grpc is streaming where several things happen in a single request. Protocol buffers are used instead of JSON to handle request/response multiplexing.",source:"@site/docs/reference/connectors/grpc.md",sourceDirName:"reference/connectors",slug:"/reference/connectors/grpc",permalink:"/reference/connectors/grpc",draft:!1,tags:[],version:"current",lastUpdatedAt:1698489480,formattedLastUpdatedAt:"Oct 28, 2023",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"gRPC"},sidebar:"docSidebar",previous:{title:"GraphQL",permalink:"/reference/connectors/graphql"},next:{title:"HackerRank",permalink:"/reference/connectors/hackerrank"}},p={},d=[{value:"Prerequisite",id:"prerequisite",level:2},{value:"Configuring API Connector in DronaHQ",id:"configuring-api-connector-in-dronahq",level:2},{value:"General",id:"general",level:4},{value:"Authentication",id:"authentication",level:4},{value:"Adding API Queries",id:"adding-api-queries",level:2},{value:"Using gRPC Connector",id:"using-grpc-connector",level:2}],m={toc:d},g="wrapper";function h(e){var{components:t}=e,n=l(e,["components"]);return(0,r.kt)(g,o(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){i(e,t,n[t])}))}return e}({},m,n),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"gRPC is a robust open-source high performance Remote Procedure Call (RPC) framework used to develop scalable and fast APIs. The core concept in grpc is streaming where several things happen in a single request. Protocol buffers are used instead of JSON to handle request/response multiplexing."),(0,r.kt)("h2",{id:"prerequisite"},"Prerequisite"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Connection Parameters:\nTo establish a successful connection, gather the following information:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Host: The host address (IP or domain) where the gRPC server is located."),(0,r.kt)("li",{parentName:"ul"},"Port: The port number on which the gRPC server is listening for incoming connections."),(0,r.kt)("li",{parentName:"ul"},"Proto Type File Details: Information about the Protocol Buffers (Proto) type file that defines the service methods and message types for communication.")))),(0,r.kt)("h2",{id:"configuring-api-connector-in-dronahq"},"Configuring API Connector in DronaHQ"),(0,r.kt)("p",null,"Set up your API connector by entering the required details. Ensure Connector connection using the ",(0,r.kt)("inlineCode",{parentName:"p"},"Test connection")," option. Once verified, click ",(0,r.kt)("inlineCode",{parentName:"p"},"Save")," to save your configuration settings. "),(0,r.kt)("h4",{id:"general"},"General"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Host"),(0,r.kt)("td",{parentName:"tr",align:null},"The host address (IP or domain) where the gRPC server is located.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Port"),(0,r.kt)("td",{parentName:"tr",align:null},"The port number on which the gRPC server is listening for incoming connections.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Meta Data"),(0,r.kt)("td",{parentName:"tr",align:null},"Key-value pairs that you can add as headers for each API call, if needed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Proto File"),(0,r.kt)("td",{parentName:"tr",align:null},"Information about the Protocol Buffers (Proto) type file that defines the service methods and message types for communication.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Service Definition Source"),(0,r.kt)("td",{parentName:"tr",align:null},"Specifies the method to connect to gRPC using Server Reflection, which allows dynamically discovering and using gRPC services, or import a .proto file from a URL, providing the service definition directly from a remote location. This field determines how your gRPC client locates and accesses the service methods and message types for effective communication with the gRPC server.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Maximum Incoming Message Size (bytes)"),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum size, in bytes, for incoming gRPC messages that the client can receive without error. This setting ensures that the client can handle large incoming messages without any issues.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Maximum Outgoing Message Size (bytes)"),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum size, in bytes, for outgoing gRPC messages that the client can send to the server. This setting helps control the size of messages sent to the server and ensures they comply with server-side constraints and capabilities.")))),(0,r.kt)("figure",null,(0,r.kt)(a.Z,{src:"/img/reference/connectors/grpc/details.png",alt:"gRPC with Sample details.",mdxType:"Thumbnail"}),(0,r.kt)("figcaption",{align:"center"},(0,r.kt)("i",null,"gRPC with Sample details."))),(0,r.kt)("h4",{id:"authentication"},"Authentication"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Authentication Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"None"),(0,r.kt)("td",{parentName:"tr",align:null},"No authentication required.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OAuth V2"),(0,r.kt)("td",{parentName:"tr",align:null},"Authenticate using OAuth version 2.0 protocol.")))),(0,r.kt)("h2",{id:"adding-api-queries"},"Adding API Queries"),(0,r.kt)("p",null,"To incorporate API queries using gRPC, follow these steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Query Name: Assign a unique and meaningful name to your query, making it easily identifiable.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Service: Specify the service that you intend to interact with through your API query.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Method: Define the method within the chosen service that you will be utilizing for your API query.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Data: Provide the necessary data for your query. This may include various parameters, depending on the method's requirements. For instance, if you're invoking a method named \"Welcome\" and the required data is a JSON object, format it as follows:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "Welcome"\n}\n')),(0,r.kt)("figure",null,(0,r.kt)(a.Z,{src:"/img/reference/connectors/grpc/query.png",alt:"Translate Query",mdxType:"Thumbnail"}),(0,r.kt)("figcaption",{align:"center"},(0,r.kt)("i",null,"Translate Query"))))),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Utilize double curly brackets for incorporating dynamic variables. Prior to saving, test with sample values. Associate dynamic variables with controls/actions for real-time utilization.")),(0,r.kt)("p",null,"Your saved queries will be visible beneath your connector within the Connector Library. "),(0,r.kt)("h2",{id:"using-grpc-connector"},"Using gRPC Connector"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Access Data Bind Section or Control Action:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Navigate to the data bind section of the control."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Provided Data for Query or Interaction:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'Depending on the selected gRPC method, input required data parameters. For instance, if you\'re using a method called "Welcome," structure the data as JSON:'),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "Welcome"\n}\n')),(0,r.kt)("figure",null,(0,r.kt)(a.Z,{src:"/img/reference/connectors/grpc/query.png",alt:"Translate Query",mdxType:"Thumbnail"}),(0,r.kt)("figcaption",{align:"center"},(0,r.kt)("i",null,"Translate Query"))))))),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Place the Table grid control from the Controls section.  Select gRPC Connector from Data Bind Options. Navigate to ",(0,r.kt)("inlineCode",{parentName:"li"},"Data Bind Options -> Quick Select -> Connector Queries"),".")),(0,r.kt)("figure",null,(0,r.kt)(a.Z,{src:"/img/reference/connectors/grpc/output.png",alt:"output of Query",mdxType:"Thumbnail"})))}h.isMDXComponent=!0}}]);