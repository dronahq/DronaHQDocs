"use strict";(self.webpackChunkdronahq_docs=self.webpackChunkdronahq_docs||[]).push([[91521],{34798:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>i,default:()=>g,frontMatter:()=>s,metadata:()=>d,toc:()=>u});t(67294);var n=t(3905);function o(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){return a=null!=a?a:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):function(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))})),e}function l(e,a){if(null==e)return{};var t,n,o=function(e,a){if(null==e)return{};var t,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(o[t]=e[t]);return o}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}const s={sidebar_position:97},i="Configure External Databases",d={unversionedId:"self-hosted-deployment/configure-external-databases",id:"self-hosted-deployment/configure-external-databases",title:"Configure External Databases",description:"Configure and migrate databases to an external ones.",source:"@site/docs/self-hosted-deployment/configure-external-databases.md",sourceDirName:"self-hosted-deployment",slug:"/self-hosted-deployment/configure-external-databases",permalink:"/self-hosted-deployment/configure-external-databases",draft:!1,tags:[],version:"current",lastUpdatedAt:1722960283,formattedLastUpdatedAt:"Aug 6, 2024",sidebarPosition:97,frontMatter:{sidebar_position:97},sidebar:"docSidebar",previous:{title:"Configure DocumentDB",permalink:"/self-hosted-deployment/configure-documentdb-storage"},next:{title:"Environment Variables",permalink:"/self-hosted-deployment/environment-variables"}},p={},u=[{value:"Configure and migrate databases to an external ones.",id:"configure-and-migrate-databases-to-an-external-ones",level:3},{value:"Prerequisite",id:"prerequisite",level:3},{value:"1. MYSQL Client",id:"1-mysql-client",level:4},{value:"2. MongoDB client and developer tools",id:"2-mongodb-client-and-developer-tools",level:4},{value:"1. Preparing data and files for migration",id:"1-preparing-data-and-files-for-migration",level:2},{value:"1.1 Exporting MYSQL data",id:"11-exporting-mysql-data",level:3},{value:"a. Export data from MYSQL container",id:"a-export-data-from-mysql-container",level:4},{value:"b. Download from DronaHQ repository",id:"b-download-from-dronahq-repository",level:4},{value:"1.2 Exporting MONGODB data",id:"12-exporting-mongodb-data",level:3},{value:"a. Export data from MONGODB container",id:"a-export-data-from-mongodb-container",level:4},{value:"b. Download from DronaHQ repository",id:"b-download-from-dronahq-repository-1",level:4},{value:"2. Migrate data to external hosted database",id:"2-migrate-data-to-external-hosted-database",level:2},{value:"2.1 Restore data on external MYSQL database.",id:"21-restore-data-on-external-mysql-database",level:3},{value:"a. Using running MYSQL container",id:"a-using-running-mysql-container",level:4},{value:"b. Using installed client on host machine",id:"b-using-installed-client-on-host-machine",level:4},{value:"2.2 Restore data on external MONGODB database.",id:"22-restore-data-on-external-mongodb-database",level:3},{value:"a. Using running MONGODB container",id:"a-using-running-mongodb-container",level:4},{value:"b. Using installed client on host machine",id:"b-using-installed-client-on-host-machine-1",level:4},{value:"3. Create application user in external database",id:"3-create-application-user-in-external-database",level:2},{value:"3.1 Create application user in MYSQL external database",id:"31-create-application-user-in-mysql-external-database",level:3},{value:"i. Create database user",id:"i-create-database-user",level:4},{value:"ii. Grant privileges to new user",id:"ii-grant-privileges-to-new-user",level:4},{value:"iii. Flush privileges for newly assigned privileges to take effect immediately",id:"iii-flush-privileges-for-newly-assigned-privileges-to-take-effect-immediately",level:4},{value:"3.2 Create application user in MONGODB external database",id:"32-create-application-user-in-mongodb-external-database",level:3},{value:"4. Configure DronaHQ to use external databases",id:"4-configure-dronahq-to-use-external-databases",level:2},{value:"5. Restart DronaHQ server",id:"5-restart-dronahq-server",level:2}],c={toc:u},m="wrapper";function g(e){var{components:a}=e,t=l(e,["components"]);return(0,n.kt)(m,r(function(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{},n=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),n.forEach((function(a){o(e,a,t[a])}))}return e}({},c,t),{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"configure-external-databases"},"Configure External Databases"),(0,n.kt)("h3",{id:"configure-and-migrate-databases-to-an-external-ones"},"Configure and migrate databases to an external ones."),(0,n.kt)("p",null,"In Docker based self-hosted setup, user information, apps information, documents and other resources are stored in a ",(0,n.kt)("a",{parentName:"p",href:"https://hub.docker.com/layers/library/mysql/oracle/images/sha256-4c718aac52c18fc65ff75012f486957c0215247592b36a263024bf458d92d51f?context=explore"},"MYSQL")," and ",(0,n.kt)("a",{parentName:"p",href:"https://hub.docker.com/layers/library/mongo/5.0.11/images/sha256-bd481f6d8847e307f512bb25d8834457e29f36c0fe1987b68db73c803d292d3a?context=explore"},"MONGODB")," container with mapped ",(0,n.kt)("a",{parentName:"p",href:"https://docs.docker.com/storage/volumes/"},"persistent storage volume"),". For production use cases, you should host these databases on external managed databases services. managed databases are more maintainable, scalable and reliable."),(0,n.kt)("p",null,"If you are installing DronaHQ self hosted on Kubernetes platform, then you should externalize your database. DronaHQ don't provide containerized databases support by default for installation on kubernetes cluster."),(0,n.kt)("admonition",{title:"User rights and permissions",type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"Database user you will be using to import/export database files must have superuser/admin privileges to that database. These are necessary for some essential operations in database like downloading/installing updates.")),(0,n.kt)("p",null,"Use following steps to set up external databases for docker based installations."),(0,n.kt)("h3",{id:"prerequisite"},"Prerequisite"),(0,n.kt)("p",null,"To import data into your external database, you need to install database clients on your machine."),(0,n.kt)("h4",{id:"1-mysql-client"},"1. MYSQL Client"),(0,n.kt)("p",null,"1.1 Update package information for the MySQL APT repository"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"sudo apt-get update\n")),(0,n.kt)("p",null,"1.2 Install ",(0,n.kt)("a",{parentName:"p",href:"https://packages.ubuntu.com/focal/mysql-client-core-8.0"},"mysql client package")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"sudo apt install mysql-client-core-8.0\n")),(0,n.kt)("p",null,"1.3 check that client is properly installed"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"mysql --version\n")),(0,n.kt)("p",null,"you will get output for above command as follows"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"mysql  Ver 8.0.33-0ubuntu0.22.04.4 for Linux on x86_64 ((Ubuntu))\n")),(0,n.kt)("h4",{id:"2-mongodb-client-and-developer-tools"},"2. MongoDB client and developer tools"),(0,n.kt)("p",null,"1.1 Download mongo shell package"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"wget https://downloads.mongodb.com/compass/mongodb-mongosh_1.10.1_amd64.deb\n")),(0,n.kt)("p",null,"1.2 Install with ",(0,n.kt)("inlineCode",{parentName:"p"},"dpkg")," and remove downloaded file"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"sudo dpkg -i mongodb-mongosh_1.10.1_amd64.deb && rm mongodb-mongosh_1.10.1_amd64.deb\n")),(0,n.kt)("p",null,"1.3 Download mongo tools. Don't forget to update your linux distribution in command."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"wget https://fastdl.mongodb.org/tools/db/mongodb-database-tools-ubuntu2204-x86_64-100.7.4.deb\n")),(0,n.kt)("p",null,"1.4 Install with ",(0,n.kt)("inlineCode",{parentName:"p"},"dpkg")," and remove package"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"sudo dpkg -i mongodb-database-tools-ubuntu2204-x86_64-100.7.4.deb \\\n&& rm mongodb-database-tools-ubuntu2204-x86_64-100.7.4.deb\n")),(0,n.kt)("p",null,"1.5 Check  if mongodb and mongodb tools are installed properly"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"mongosh --version && mongorestore --version\n")),(0,n.kt)("p",null,"output:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"1.10.1\nmongorestore version: 100.7.4\ngit version: fb74684da15f56d40231ab04ded86c71c1d8f37c\nGo version: go1.19.11\n   os: linux\n   arch: amd64\n   compiler: gc\n")),(0,n.kt)("h2",{id:"1-preparing-data-and-files-for-migration"},"1. Preparing data and files for migration"),(0,n.kt)("p",null,"DronaHQ uses MYSQL and MONGODB together to store your meta information and data. Using both technology helps DronaHQ become faster and reliable."),(0,n.kt)("h3",{id:"11-exporting-mysql-data"},"1.1 Exporting MYSQL data"),(0,n.kt)("p",null,"There are two possible ways by which you can export MYSQL data."),(0,n.kt)("h4",{id:"a-export-data-from-mysql-container"},"a. Export data from MYSQL container"),(0,n.kt)("p",null,"To export data from MYSQL container, run the following command in DronaHQ installation directory. Use this option, if you want to migrate your MYSQL containerized database to external database."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"sudo docker-compose exec -T mysqldb sh -c 'exec mysqldump -u <% user %> --password=<% password %> \\\n--databases dhq_audit_log db5x --add-drop-database --routines' > mysql-init.sql && sed -i 's/ DEFINER=[^ |\\*]*//g' mysql-init.sql\n")),(0,n.kt)("p",null,"Replace variables encapsulated in ",(0,n.kt)("inlineCode",{parentName:"p"},"<% variable %>")," with actual value. "),(0,n.kt)("h4",{id:"b-download-from-dronahq-repository"},"b. Download from DronaHQ repository"),(0,n.kt)("p",null,"To download already exported data from DronaHQ repository, run the following command. Use this option if you are setting new up installation."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"curl -L -O https://license.dronahq.com/self-hosted/master/init/mysql-init.sql\n")),(0,n.kt)("h3",{id:"12-exporting-mongodb-data"},"1.2 Exporting MONGODB data"),(0,n.kt)("p",null,"There are two possible ways by which you can export MONGODB data."),(0,n.kt)("h4",{id:"a-export-data-from-mongodb-container"},"a. Export data from MONGODB container"),(0,n.kt)("p",null,"To export data from MONGODB container, run the following command in DronaHQ installation directory. Use this option, if you want to migrate your MONGODB containerized database to external database."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"sudo docker-compose exec -T mongodb sh -c 'mongodump -d db5x_studio -u <% user %> -p <% password %> --authenticationDatabase admin  --archive' > mongo-init.dump\n")),(0,n.kt)("p",null,"Replace variables encapsulated in ",(0,n.kt)("inlineCode",{parentName:"p"},"<% variable %>")," with actual value."),(0,n.kt)("h4",{id:"b-download-from-dronahq-repository-1"},"b. Download from DronaHQ repository"),(0,n.kt)("p",null,"To download already exported data from DronaHQ repository, run the following command. Use this option if you are setting new up installation."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"curl -L -O https://license.dronahq.com/self-hosted/master/init/mongo-init.dump\n")),(0,n.kt)("h2",{id:"2-migrate-data-to-external-hosted-database"},"2. Migrate data to external hosted database"),(0,n.kt)("p",null,"Next step is to restore your data into external databases. You can use database client present in your running database containers or optionally you can install database client for MYSQL and MONGODB on your host machine."),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"While running following shell commands for restoring data on external database, feel free to use command attributes and options as per requirement and database specification.")),(0,n.kt)("h3",{id:"21-restore-data-on-external-mysql-database"},"2.1 Restore data on external MYSQL database."),(0,n.kt)("h4",{id:"a-using-running-mysql-container"},"a. Using running MYSQL container"),(0,n.kt)("p",null,"Run the following command in your DronaHQ installation directory to restore data on external database."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"sudo docker-compose exec -T mysqldb sh -c 'mysql --host=<% host %> --user=<% user %> --password=<% password %>' < mysql-init.sql\n")),(0,n.kt)("p",null,"Replace variables encapsulated in ",(0,n.kt)("inlineCode",{parentName:"p"},"<% variable %>")," with actual value."),(0,n.kt)("h4",{id:"b-using-installed-client-on-host-machine"},"b. Using installed client on host machine"),(0,n.kt)("p",null,"Run following command to restore data on external database"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"mysql --host=<% host %> --user=<% user %> --password=<% password %> < mysql-init.sql\n")),(0,n.kt)("p",null,"Replace variables encapsulated in ",(0,n.kt)("inlineCode",{parentName:"p"},"<% variable %>")," with actual value."),(0,n.kt)("h3",{id:"22-restore-data-on-external-mongodb-database"},"2.2 Restore data on external MONGODB database."),(0,n.kt)("h4",{id:"a-using-running-mongodb-container"},"a. Using running MONGODB container"),(0,n.kt)("p",null,"Run the following command in your DronaHQ installation directory to restore data on external database."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"sudo docker-compose exec -T mongodb sh -c 'mongorestore --host=localhost -u <% user %> -p <% password %> --db db5x_studio --authenticationDatabase admin --archive' < mongo-init.dump\n")),(0,n.kt)("p",null,"Replace variables encapsulated in ",(0,n.kt)("inlineCode",{parentName:"p"},"<% variable %>")," with actual value."),(0,n.kt)("h4",{id:"b-using-installed-client-on-host-machine-1"},"b. Using installed client on host machine"),(0,n.kt)("p",null,"Run following command to restore data on external database"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"mongorestore --host=<% host %> -u <% user %> -p <% password %> --db db5x_studio --authenticationDatabase admin --archive=mongo-init.dump\n")),(0,n.kt)("p",null,"Replace variables encapsulated in ",(0,n.kt)("inlineCode",{parentName:"p"},"<% variable %>")," with actual value."),(0,n.kt)("h2",{id:"3-create-application-user-in-external-database"},"3. Create application user in external database"),(0,n.kt)("p",null,"Considering importance of data security, privacy, and integrity, DronaHQ recommends creating and using application user with limited privileges defined for required scope."),(0,n.kt)("p",null,"You can create application user in external database using following commands."),(0,n.kt)("h3",{id:"31-create-application-user-in-mysql-external-database"},"3.1 Create application user in MYSQL external database"),(0,n.kt)("p",null,"Replace variables encapsulated in ",(0,n.kt)("inlineCode",{parentName:"p"},"<% variable %>")," with actual value."),(0,n.kt)("h4",{id:"i-create-database-user"},"i. Create database user"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"mysql -h<% host %> -u<% user %> -p<% password %> -e \"CREATE USER '<% application-user %>'@'%' IDENTIFIED BY '<% application-password %>';\"\n")),(0,n.kt)("h4",{id:"ii-grant-privileges-to-new-user"},"ii. Grant privileges to new user"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"mysql -h<% host %> -u<% user %> -p<% password %> -e \"GRANT ALL PRIVILEGES ON *.* TO '<% application-user %>'@'%';\"\n")),(0,n.kt)("h4",{id:"iii-flush-privileges-for-newly-assigned-privileges-to-take-effect-immediately"},"iii. Flush privileges for newly assigned privileges to take effect immediately"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},'mysql -h<% host %> -u<% user %> -p<% password %> -e "FLUSH PRIVILEGES;"\n')),(0,n.kt)("h3",{id:"32-create-application-user-in-mongodb-external-database"},"3.2 Create application user in MONGODB external database"),(0,n.kt)("p",null,"To create application user in external mongodb database, run following command."),(0,n.kt)("p",null,"Replace variables encapsulated in ",(0,n.kt)("inlineCode",{parentName:"p"},"<% variable %>")," with actual value."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"mongosh --host <% host %> --username <% user %>  --password <% password %> <<EOF\nuse admin\ndb.createUser({\n  user: '<% application-user %>',\n  pwd: '<% application-password %>',\n  roles: [{\n    role: \"userAdminAnyDatabase\",\n    db: \"admin\"\n  }, {\n    role: 'readWrite',\n    db: 'db5x_studio'\n  }]\n})\nEOF\n")),(0,n.kt)("h2",{id:"4-configure-dronahq-to-use-external-databases"},"4. Configure DronaHQ to use external databases"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"dronahq.env")," file defined few environment variables. Using these variables DronaHQ can connect to external databases.\nFind following variables in ",(0,n.kt)("inlineCode",{parentName:"p"},"dronahq.env")," and update them with external database credentials."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"# MYSQL Credentials\nMYSQL_HOST=<% host %>\nMYSQL_PORT=3306\nMYSQL_USER=<% application-user %>\nMYSQL_PASSWORD=<% application-password %>\n\n# MONGODB credentials\nMONGODB_HOST=<% host %>\nMONGODB_PORT=27017\nMONGODB_USER=<% application-user %>\nMONGODB_PASSWORD=<% application-password %>\n")),(0,n.kt)("p",null,"Update following variables with appropriate values and save the file."),(0,n.kt)("h2",{id:"5-restart-dronahq-server"},"5. Restart DronaHQ server"),(0,n.kt)("p",null,"After modifying any configuration, restart is must for changes to take effect."),(0,n.kt)("p",null,"you can restart DronaHQ using following command"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo docker-compose up -d\n")))}g.isMDXComponent=!0}}]);