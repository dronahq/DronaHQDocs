"use strict";(self.webpackChunkdronahq_docs=self.webpackChunkdronahq_docs||[]).push([[4383],{10673:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>p,default:()=>k,frontMatter:()=>u,metadata:()=>o,toc:()=>c});r(67294);var n=r(3905);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}const u={sidebar_position:4},p="Update a User",o={unversionedId:"reference/scim-2-rest-api/users/update-user",id:"reference/scim-2-rest-api/users/update-user",title:"Update a User",description:"Update an existing User by ID.",source:"@site/docs/reference/scim-2-rest-api/users/update-user.md",sourceDirName:"reference/scim-2-rest-api/users",slug:"/reference/scim-2-rest-api/users/update-user",permalink:"/reference/scim-2-rest-api/users/update-user",draft:!1,tags:[],version:"current",lastUpdatedAt:1692255300,formattedLastUpdatedAt:"Aug 17, 2023",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docSidebar",previous:{title:"Retrieve a User",permalink:"/reference/scim-2-rest-api/users/get-user"},next:{title:"Enable or Disable a User",permalink:"/reference/scim-2-rest-api/users/enable-or-disable-user"}},i={},c=[{value:"Headers",id:"headers",level:4},{value:"Path Parameter",id:"path-parameter",level:4},{value:"Request Body",id:"request-body",level:4},{value:"Example cURL",id:"example-curl",level:4},{value:"Responses",id:"responses",level:4},{value:"Sample response",id:"sample-response",level:4}],d={toc:c},m="wrapper";function k(e){var{components:t}=e,r=s(e,["components"]);return(0,n.kt)(m,l(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),n.forEach((function(t){a(e,t,r[t])}))}return e}({},d,r),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"update-a-user"},"Update a User"),(0,n.kt)("p",null,"Update an existing User by ID."),(0,n.kt)("div",{class:"apidocs-header"},(0,n.kt)("div",{class:"method patch"},"PATCH"),(0,n.kt)("div",{class:"endpoint"},"/api/scim/v2/Users/{id}")),(0,n.kt)("h4",{id:"headers"},"Headers"),(0,n.kt)("table",null,(0,n.kt)("tr",null,(0,n.kt)("th",null,"Key"),(0,n.kt)("th",null,"Value")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"Accept"),(0,n.kt)("td",null,"application/json")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"Content-Type"),(0,n.kt)("td",null,"application/json")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"Authorization"),(0,n.kt)("td",null,"Bearer <API Token>"))),(0,n.kt)("h4",{id:"path-parameter"},"Path Parameter"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"id")," (required): User ID for the user to be updated.")),(0,n.kt)("h4",{id:"request-body"},"Request Body"),(0,n.kt)("p",null,"Provide the properties of the User that you want to update."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "userName": "updateduser@example.com",\n  "active": false,\n  "emails": [\n    {\n      "value": "updateduser@example.com",\n      "primary": true\n    }\n  ],\n  "profileUrl": "https://example.com/user/updateduser"\n}\n')),(0,n.kt)("h4",{id:"example-curl"},"Example cURL"),(0,n.kt)("p",null,"Replace {id} with the actual User ID you want to update:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'curl --location --request PATCH \'http://localhost:8080/api/scim/v2/Users/{id}\' \\\n--header \'Accept: application/json\' \\\n--header \'Content-Type: application/json\' \\\n--header \'Authorization: Bearer XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\' \\\n--data-raw \'{\n  "userName": "updateduser@example.com",\n  "active": false,\n  "emails": [\n    {\n      "value": "updateduser@example.com",\n      "primary": true\n    }\n  ],\n  "profileUrl": "https://example.com/user/updateduser"\n}\'\n')),(0,n.kt)("h4",{id:"responses"},"Responses"),(0,n.kt)("table",null,(0,n.kt)("tr",null,(0,n.kt)("th",null,"Status Code"),(0,n.kt)("th",null,"Description"),(0,n.kt)("th",null,"Response")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"200"),(0,n.kt)("td",null,"User updated successfully"),(0,n.kt)("td",null,"empty")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"400"),(0,n.kt)("td",null,"Invalid Request"),(0,n.kt)("td",null,"empty")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"401"),(0,n.kt)("td",null,"Unauthorized"),(0,n.kt)("td",null,"empty")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"500"),(0,n.kt)("td",null,"Internal Server Error"),(0,n.kt)("td",null,"empty"))),(0,n.kt)("h4",{id:"sample-response"},"Sample response"),(0,n.kt)("p",null,"200 : User created successfully"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "schemas": [\n        "urn:ietf:params:scim:schemas:core:2.0:User"\n    ],\n    "id": "563505",\n    "userName": "newuser@example.com",\n    "active": true,\n    "emails": [\n        {\n            "value": "newuser@example.com",\n            "primary": true\n        }\n    ],\n    "profileUrl": "https://example.com/user/newuser"\n}\n')))}k.isMDXComponent=!0}}]);