"use strict";(self.webpackChunkdronahq_docs=self.webpackChunkdronahq_docs||[]).push([[62019],{56563:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>k,frontMatter:()=>s,metadata:()=>p,toc:()=>u});n(67294);var a=n(3905);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const s={sidebar_position:5},i="Deploy DronaHQ with Kubernetes (K8s)",p={unversionedId:"self-hosted-deployment/deployment-options/kubernetes",id:"self-hosted-deployment/deployment-options/kubernetes",title:"Deploy DronaHQ with Kubernetes (K8s)",description:"You can deploy self-hosted DronaHQ on Kubernetes following the instructions in this guide.",source:"@site/docs/self-hosted-deployment/deployment-options/kubernetes.md",sourceDirName:"self-hosted-deployment/deployment-options",slug:"/self-hosted-deployment/deployment-options/kubernetes",permalink:"/self-hosted-deployment/deployment-options/kubernetes",draft:!1,tags:[],version:"current",lastUpdatedAt:1725457768,formattedLastUpdatedAt:"Sep 4, 2024",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"docSidebar",previous:{title:"Deploy on Azure Virtual Machine",permalink:"/self-hosted-deployment/deployment-options/azure"},next:{title:"Configure SSL and CA Certificates",permalink:"/self-hosted-deployment/configure-ssl-and-ca-certificates"}},d={},u=[{value:"Requirements",id:"requirements",level:2},{value:"Cluster size",id:"cluster-size",level:3},{value:"Cluster storage class",id:"cluster-storage-class",level:3},{value:"1. Clone manifests",id:"1-clone-manifests",level:2},{value:"2. Configure version",id:"2-configure-version",level:2},{value:"3. Configure secrets",id:"3-configure-secrets",level:2},{value:"4. Install DronaHQ",id:"4-install-dronahq",level:2},{value:"Additional steps",id:"additional-steps",level:2},{value:"Externalize database",id:"externalize-database",level:3},{value:"Once your external databases are ready, update its credentials in Kubernetes environment files as follows.",id:"once-your-external-databases-are-ready-update-its-credentials-in-kubernetes-environment-files-as-follows",level:4},{value:"Update DronaHQ",id:"update-dronahq",level:3},{value:"Add environment variables",id:"add-environment-variables",level:3},{value:"Mount volumes",id:"mount-volumes",level:3},{value:"1. Set security context",id:"1-set-security-context",level:4},{value:"2. Copy files",id:"2-copy-files",level:4},{value:"3. Set directory path",id:"3-set-directory-path",level:4},{value:"4. Reset security context",id:"4-reset-security-context",level:4}],c={toc:u},m="wrapper";function k(e){var{components:t}=e,n=l(e,["components"]);return(0,a.kt)(m,r(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){o(e,t,n[t])}))}return e}({},c,n),{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"deploy-dronahq-with-kubernetes-k8s"},"Deploy DronaHQ with Kubernetes (K8s)"),(0,a.kt)("p",null,"You can deploy self-hosted DronaHQ on Kubernetes following the instructions in this guide."),(0,a.kt)("h2",{id:"requirements"},"Requirements"),(0,a.kt)("p",null,"To deploy DronaHQ on Kubernetes, you need:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"A DronaHQ license key, which you can obtain from ",(0,a.kt)("a",{parentName:"li",href:"https://studio.dronahq.com/selfhosted/login"},"DronaHQ Self-Hosted Portal"),"."),(0,a.kt)("li",{parentName:"ul"},"A domain you own, to which you can add a DNS record."),(0,a.kt)("li",{parentName:"ul"},"A Kubernetes cluster. To create a cluster, see documentation on ",(0,a.kt)("a",{parentName:"li",href:"https://cloud.google.com/kubernetes-engine/docs/how-to/creating-a-zonal-cluster"},"Google Cloud Platform"),", ",(0,a.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/eks/latest/userguide/create-cluster.html"},"AWS"),", and ",(0,a.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/azure/aks/tutorial-kubernetes-deploy-cluster?tabs=azure-cli"},"Azure"),"."),(0,a.kt)("li",{parentName:"ul"},"A working installation of kubectl. To install kubectl, see documentation on ",(0,a.kt)("a",{parentName:"li",href:"https://cloud.google.com/kubernetes-engine/docs/how-to/cluster-access-for-kubectl#generate_kubeconfig_entry"},"Google Cloud Platform"),", ",(0,a.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/eks/latest/userguide/install-kubectl.html"},"AWS"),", and ",(0,a.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/azure/aks/learn/quick-kubernetes-deploy-cli#connect-to-the-cluster"},"Azure"),"."),(0,a.kt)("li",{parentName:"ul"},"You can also deploy ",(0,a.kt)("a",{parentName:"li",href:"/self-hosted-deployment/deploy-kubernetes-on-macos/"},"Kubernetes Cluster on local VMs"),".")),(0,a.kt)("h3",{id:"cluster-size"},"Cluster size"),(0,a.kt)("p",null,"The cluster must have at least one node with 2x vCPUs and 4 GB of memory. Use the following command to retrieve the capacity of your nodes."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ kubectl describe nodes\n")),(0,a.kt)("p",null,"In the Capacity section, verify the cpu and memory values meet the above requirements."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Capacity:\n    cpu: 2\n    ephemeral-storage: 20134592Ki\n    hugepages-1Gi: 0\n    hugepages-2Mi: 0\n    memory: 3944424Ki\n    pods: 17\nAllocatable:\n    cpu: 1930m\n    ephemeral-storage: 17482298133\n    hugepages-1Gi: 0\n    hugepages-2Mi: 0\n    memory: 3389416Ki\n    pods: 17\n")),(0,a.kt)("h3",{id:"cluster-storage-class"},"Cluster storage class"),(0,a.kt)("p",null,"If you want to ",(0,a.kt)("a",{parentName:"p",href:"#mount-volumes"},"mount volumes"),", ensure the volume supplied by your cloud provider can be mounted to multiple nodes. To identify your cluster's storage class, run the command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ kubectl get storageclass\n")),(0,a.kt)("p",null,"Reference your cloud provider's documentation to verify that this storage class supports the ReadWriteMany access mode."),(0,a.kt)("h2",{id:"1-clone-manifests"},"1. Clone manifests"),(0,a.kt)("p",null,"DronaHQ's Kubernetes deployment is configured using a ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/dronahq/self-hosted/tree/main/kubernetes"},"set of manifests"),". To retrieve a copy of the manifests, download the dronahq-self-hosted repository to your local machine. Open the kubernetes directory in an IDE to follow along the steps below."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"curl -L -O https://license.dronahq.com/self-hosted/master.zip && unzip master.zip\ncd master/kubernetes\n")),(0,a.kt)("h2",{id:"2-configure-version"},"2. Configure version"),(0,a.kt)("p",null,"In ",(0,a.kt)("inlineCode",{parentName:"p"},"dronahq-webapp.yaml"),", change the image tag to indicate the ",(0,a.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/dronahq/self-hosted/tags"},"version of DronaHQ")," to install. The following example specifies the image tag to install version 2.2.7."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"image: dronahq/self-hosted:2.2.7\n")),(0,a.kt)("h2",{id:"3-configure-secrets"},"3. Configure secrets"),(0,a.kt)("p",null,"Copy the ",(0,a.kt)("inlineCode",{parentName:"p"},"dronahq-secrets.template.yaml")," file to a new file named ",(0,a.kt)("inlineCode",{parentName:"p"},"dronahq-secrets.yaml"),". This file sets the configuration options for your deployment, and stores them as ",(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/configuration/secret/"},"Kubernetes secrets"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cp dronahq-secrets.template.yaml dronahq-secrets.yaml\n")),(0,a.kt)("p",null,"Set the configuration options for your instance. Note that values in this file need to be encoded in ",(0,a.kt)("inlineCode",{parentName:"p"},"base64"),"."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Use simple echo command to convert your text to base64 encoded string"),(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("inlineCode",{parentName:"p"},"echo -n 'super-secret-password' | base64"))),(0,a.kt)("p",null,"By default, user name for databases is set to ",(0,a.kt)("inlineCode",{parentName:"p"},"dronahq"),", you  can change it using ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/dronahq/self-hosted/blob/main/EnvironmentVariables.md"},"environment variables"),"."),(0,a.kt)("p",null,"Set the following values in ",(0,a.kt)("inlineCode",{parentName:"p"},"dronahq-secrets.yaml"),":"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Setting"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"license_key"),(0,a.kt)("td",{parentName:"tr",align:null},"base64 encoded dronahq license key.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"mysql_host"),(0,a.kt)("td",{parentName:"tr",align:null},"base64 encoded mysql server address or domain name")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"mysql_password"),(0,a.kt)("td",{parentName:"tr",align:null},"base64 encoded mysql password for selected user")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"mongodb_host"),(0,a.kt)("td",{parentName:"tr",align:null},"base64 encoded mongodb server address or domain name")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"mongodb_password"),(0,a.kt)("td",{parentName:"tr",align:null},"base64 encoded mongodb password for selected user")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"aws_s3_region"),(0,a.kt)("td",{parentName:"tr",align:null},"base64 encoded s3 bucket name you want to use")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"aws_s3_access_key_id"),(0,a.kt)("td",{parentName:"tr",align:null},"base64 encoded access key id to use selected bucket")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"aws_s3_access_key_secret"),(0,a.kt)("td",{parentName:"tr",align:null},"base64 encoded secret key pair for selected access key")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"aws_s3_bucket_name"),(0,a.kt)("td",{parentName:"tr",align:null},"base64 encoded aws s3 bucket name")))),(0,a.kt)("h2",{id:"4-install-dronahq"},"4. Install DronaHQ"),(0,a.kt)("p",null,"After updating the configuration, install DronaHQ. Run the following commands in sequence."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kubectl apply -f ./dronahq-secrets.yaml\nkubectl apply -f ./dronahq-webapp.yaml\nkubectl apply -f ./load-balancer.yaml\n")),(0,a.kt)("p",null,"After installing DronaHQ, verify you have pod for the ",(0,a.kt)("inlineCode",{parentName:"p"},"webapp"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ kubectl get pods\n\nNAME                                     READY   STATUS    RESTARTS      AGE\nwebapp-63452e7643-si4g5                  1/1     Running   1 (2h ago)    8h\n")),(0,a.kt)("p",null,"Once the pod is running, verify the installation by port forwarding to ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kubectl port-forward webapp-63452e7643-si4g5 8080:8080\n")),(0,a.kt)("p",null,"You can then access DronaHQ at ",(0,a.kt)("inlineCode",{parentName:"p"},"http://localhost:8080/"),"."),(0,a.kt)("h2",{id:"additional-steps"},"Additional steps"),(0,a.kt)("p",null,"You need to externalize your database to a remote host. DronaHQ strongly recommends you to configure SSL, and keep up-to-date with the latest version of DronaHQ. Setting environment variables is often necessary to configure self-hosted features."),(0,a.kt)("h3",{id:"externalize-database"},"Externalize database"),(0,a.kt)("p",null,"By default, the DronaHQ Kubernetes installation uses remotely hosted managed database instances of MySQL and MongoDB to make it more maintainable, scalable and reliable."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/self-hosted-deployment/configure-external-databases"},"Learn how to make your external databases DronaHQ ready.")),(0,a.kt)("h4",{id:"once-your-external-databases-are-ready-update-its-credentials-in-kubernetes-environment-files-as-follows"},"Once your external databases are ready, update its credentials in Kubernetes environment files as follows."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Encrypt your passwords.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"echo -n <password> | base64\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"In ",(0,a.kt)("inlineCode",{parentName:"p"},"dronahq-secrets.yaml"),", set the value of ",(0,a.kt)("inlineCode",{parentName:"p"},"mysql_password")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"mongodb_password")," as the base64 encoded password.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"(optional) In ",(0,a.kt)("inlineCode",{parentName:"p"},"dronahq-webapp.yaml"),", set the MySQL and MongoDB credentials to the credentials of your managed database instance. You do not need to specify ",(0,a.kt)("inlineCode",{parentName:"p"},"host")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"password"),", since that value is pulled from the secret you already configured."))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"- name: MYSQL_USER\n  value: <mysql-user>\n- name: MYSQL_PORT\n  value: <mysql-port>\n- name: MONGODB_USER\n  value: <mongodb-user>\n- name: MONGODB_PORT\n  value: <mongodb-port>\n")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Apply changes to the two manifests.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kubectl apply -f dronahq-secrets.yaml\nkubectl apply -f dronahq-webapp.yaml\n")),(0,a.kt)("h3",{id:"update-dronahq"},"Update DronaHQ"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Back up your database. If you use a managed database service, your database provider may have a feature to take snapshots or otherwise back up your database. ")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Identify the appropriate release version on ",(0,a.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/dronahq/self-hosted"},"Docker Hub"),". See DronaHQ's self-hosted ",(0,a.kt)("a",{parentName:"p",href:"https://docs.dronahq.com/selfhosted-stable/"},"stable release notes")," to learn about version-specific features.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Take database updates for selected version from DronaHQ. Get inside directory ",(0,a.kt)("inlineCode",{parentName:"p"},"external-database")," and run ",(0,a.kt)("inlineCode",{parentName:"p"},"db-update.sh")," file. This is interactive shell and will help you get database updates for selected version.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"In ",(0,a.kt)("inlineCode",{parentName:"p"},"dronahq-webapp.yaml"),", change the image tag to indicate the ",(0,a.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/dronahq/self-hosted/tags"},"version of DronaHQ")," to install. The following example specifies the ",(0,a.kt)("inlineCode",{parentName:"p"},"image")," tag to install version 2.2.7."))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"image: dronahq/self-hosted:2.2.7\n")),(0,a.kt)("ol",{start:6},(0,a.kt)("li",{parentName:"ol"},"Apply changes to the manifest.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kubectl apply -f dronahq-webapp.yaml\n")),(0,a.kt)("ol",{start:7},(0,a.kt)("li",{parentName:"ol"},"Verify that your pods is running.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ kubectl get pods\n\nNAME                        READY   STATUS      RESTARTS    AGE\nwebapp-63452e7643-si4g5     1/1     Running     1 (8h ago)  8h\n")),(0,a.kt)("h3",{id:"add-environment-variables"},"Add environment variables"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/dronahq/self-hosted/blob/main/EnvironmentVariables.md"},"Environment variables")," provide ways to configure a DronaHQ instance."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Add the environment variable to ",(0,a.kt)("inlineCode",{parentName:"li"},"dronahq-webapp.yaml"),". This example sets the ",(0,a.kt)("inlineCode",{parentName:"li"},"SECURE_HTTP")," variable, but this pattern applies to other environment variables as well.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"env:\n    - name: SECURE_HTTP\n      value: true\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Apply the changes to the manifest.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kubectl apply -f dronahq-webapp.yaml\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Verify that your pod is running.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ kubectl get pods\n\nNAME                        READY   STATUS      RESTARTS    AGE\nwebapp-63452e7643-si4g5     1/1     Running     1 (8h ago)  8h\n")),(0,a.kt)("h3",{id:"mount-volumes"},"Mount volumes"),(0,a.kt)("p",null,"There are several use cases which require the use of ",(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/storage/volumes/"},"volumes"),". For example, when configuring a gRPC resource, you need to mount a volume containing the protos files to the DronaHQ deployment. Follow these instructions to create a persistent volume and copy files from your local machine to the volume."),(0,a.kt)("h4",{id:"1-set-security-context"},"1. Set security context"),(0,a.kt)("p",null,"In a later step, you use ",(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/self-hosted-deployment/generated/kubectl/kubectl-commands#cp"},"kubectl cp")," to copy files from your local machine to the Kubernetes cluster, which requires the pod to run with root privileges. Modify your deployment so the pods run as root by adding the ",(0,a.kt)("inlineCode",{parentName:"p"},"securityContext")," in your ",(0,a.kt)("inlineCode",{parentName:"p"},"dronahq-webapp.yaml")," file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"spec:\n    securityContext:\n        runAsUser: 0\n        fsGroup: 2000\n")),(0,a.kt)("p",null,"Apply changes to the manifest."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kubectl apply -f dronahq-webapp.yaml\n")),(0,a.kt)("p",null,"Verify that your pods is in a ready state before continuing."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ kubectl get pods\n\nNAME                                     READY   STATUS    RESTARTS      AGE\nwebapp-63452e7643-si4g5                     1/1     Running   1 (8h ago)   8h\n")),(0,a.kt)("h4",{id:"2-copy-files"},"2. Copy files"),(0,a.kt)("p",null,"Next, copy the ",(0,a.kt)("inlineCode",{parentName:"p"},"protos")," files from your local machine to the PVC. Ensure you local machine has a folder named protos and run the following command. Replace ",(0,a.kt)("inlineCode",{parentName:"p"},"webapp-63452e7643-si4g5")," with the name of your main DronaHQ container, retrieved from ",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl get pods"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kubectl cp protos/ webapp-63452e7643-si4g5:/dronahq_backend/pv-data/protos\n")),(0,a.kt)("h4",{id:"3-set-directory-path"},"3. Set directory path"),(0,a.kt)("p",null,"If you're configuring gRPC, specify the location of the protos directory. In ",(0,a.kt)("inlineCode",{parentName:"p"},"dronahq-webapp.yaml"),", set the ",(0,a.kt)("inlineCode",{parentName:"p"},"PROTO_DIRECTORY_PATH")," environment variable."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'env:\n    - name: PROTO_DIRECTORY_PATH\n      value: "/dronahq_backend/pv-data/protos"\n')),(0,a.kt)("h4",{id:"4-reset-security-context"},"4. Reset security context"),(0,a.kt)("p",null,"Reset the security context of your deployment by removing the ",(0,a.kt)("inlineCode",{parentName:"p"},"securityContext")," field, or by defining a non-root user."),(0,a.kt)("p",null,"Apply changes to the manifest."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kubectl apply -f dronahq-webapp.yaml\n")))}k.isMDXComponent=!0}}]);