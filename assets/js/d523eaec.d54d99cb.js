"use strict";(self.webpackChunkdronahq_docs=self.webpackChunkdronahq_docs||[]).push([[41062],{81250:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>b,frontMatter:()=>c,metadata:()=>d,toc:()=>h});n(67294);var o=n(3905),a=n(86291),r=n(93070),i=n(50551);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function u(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const c={sidebar_label:"Contributing to Docs",sidebar_position:30},p="Contributing to Docs",d={unversionedId:"contributions",id:"contributions",title:"Contributing to Docs",description:"Overview",source:"@site/wiki/contributions.mdx",sourceDirName:".",slug:"/contributions",permalink:"/wiki/contributions",draft:!1,tags:[],version:"current",lastUpdatedAt:1691053192,formattedLastUpdatedAt:"Aug 3, 2023",sidebarPosition:30,frontMatter:{sidebar_label:"Contributing to Docs",sidebar_position:30},sidebar:"wiki",previous:{title:"Docs SLA",permalink:"/wiki/sla"},next:{title:"PR Review Checklist",permalink:"/wiki/checklist"}},m={},h=[{value:"Overview",id:"overview",level:2},{value:"Mise-en-place",id:"mise-en-place",level:2},{value:"Step 1: Clone the repository",id:"step-1-clone-the-repository",level:3},{value:"Step 2: Install docs dependencies",id:"step-2-install-docs-dependencies",level:3},{value:"Workflow",id:"workflow",level:2},{value:"Step 1: Create a new branch",id:"step-1-create-a-new-branch",level:3},{value:"Step 2: Start the development server",id:"step-2-start-the-development-server",level:3},{value:"Step 3: Make your local changes",id:"step-3-make-your-local-changes",level:3},{value:"Step 4: Stage your local changes",id:"step-4-stage-your-local-changes",level:3},{value:"Step 5: Create a commit",id:"step-5-create-a-commit",level:3},{value:"Step 6: Test your local changes",id:"step-6-test-your-local-changes",level:3},{value:"Step 7: Push your commit(s)",id:"step-7-push-your-commits",level:3},{value:"Step 8: Compare and pull request",id:"step-8-compare-and-pull-request",level:3},{value:"Common errors",id:"common-errors",level:2},{value:"Broken markdown links",id:"broken-markdown-links",level:3},{value:"Broken image links",id:"broken-image-links",level:3},{value:"Improperly imported components",id:"improperly-imported-components",level:3},{value:"Formatting code blocks",id:"formatting-code-blocks",level:3},{value:"Codespaces",id:"codespaces",level:2},{value:"Step 1: Create a Codespace",id:"step-1-create-a-codespace",level:3},{value:"Step 2: Configure your Codespace",id:"step-2-configure-your-codespace",level:3}],g={toc:h},k="wrapper";function b(e){var{components:t}=e,n=u(e,["components"]);return(0,o.kt)(k,s(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},o=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),o.forEach((function(t){l(e,t,n[t])}))}return e}({},g,n),{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"contributing-to-docs"},"Contributing to Docs"),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,"Docs contributions take many forms. However, they all follow the same workflow. Below, you'll find all you need to get\nyour local development environment set up and - before you know it - you'll be helping make our product clearer for\nusers."),(0,o.kt)("h2",{id:"mise-en-place"},"Mise-en-place"),(0,o.kt)("p",null,"Like\n",(0,o.kt)("a",{parentName:"p",href:"https://i0.wp.com/jamesabrock.com/wp-content/uploads/2018/06/IMG_0013-1024x682.jpg?fit=676%2C450&ssl=1"},"Uncle Tony"),"\nsaid:"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u201cMise-en-place is the religion of all good line cooks...\u201d")),(0,o.kt)("p",null,"Docs believes the same is true for engineers and all contributors to documentation."),(0,o.kt)("p",null,"As such, there's a few steps needed to get your 'station' in order and to ready your local development environment for\nthe fast-paced world of documentation."),(0,o.kt)("p",null,"We use Yarn as our package-manager- / project-manager-of-choice. Please make sure you follow\n",(0,o.kt)("a",{parentName:"p",href:"https://yarnpkg.com/getting-started/install"},"their installation instructions")," if not already on your system."),(0,o.kt)("p",null,"Two ",(0,o.kt)("inlineCode",{parentName:"p"},"hasura/graphql-engine")," repositories exist: one is our OSS repo whereas the other is a private repository only\navailable to employees at Hasura. We utilize these two repos so we can maintain open-source contributions and also\nprovide an undisturbed repository to which the community has access. As changes are merged into our private repository,\nthey're reflected in the OSS version as well."),(0,o.kt)("p",null,"Anywhere where there are differences in procedure between community contributions and those of Hasurians, tabs can be\nfound. If you're a member of the community looking to contribute to docs, follow the ",(0,o.kt)("strong",{parentName:"p"},"Community Member")," instructions\ninside each step. Alternatively, Hasurians should follow the instructions which fall under their tab."),(0,o.kt)("admonition",{title:"Note",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Like to automate things? So do we. This snippet runs through the prerequisites for Hasurians and fires up the docs\ndevelopment server. Simply navigate to the directory you want the ",(0,o.kt)("inlineCode",{parentName:"p"},"hasura-graphql-engine-mono")," repo to live, open your\nterminal, copy / paste, hit enter, and save literally seconds:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/hasura/graphql-engine-mono.git\ncd graphql-engine-mono/docs\nyarn install\nyarn start\n"))),(0,o.kt)("p",null,"Alternatively, take it step-by-step:"),(0,o.kt)("h3",{id:"step-1-clone-the-repository"},"Step 1: Clone the repository"),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"hasurians",label:"Hasurians",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/hasura/graphql-engine-mono.git\n"))),(0,o.kt)(i.Z,{value:"community",label:"Community Members",mdxType:"TabItem"},(0,o.kt)("p",null,"If you're a community member, you'll first need to fork the ",(0,o.kt)("inlineCode",{parentName:"p"},"hasura/graphql-engine")," repository. If logged into GitHub,\nyou can do that by ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/hasura/graphql-engine/fork"},"simply pressing")," here."),(0,o.kt)("p",null,"Once you have your own forked copy of the ",(0,o.kt)("inlineCode",{parentName:"p"},"graphql-engine")," repo, you can clone ",(0,o.kt)("strong",{parentName:"p"},"this")," to your machine. Simply replace\n",(0,o.kt)("inlineCode",{parentName:"p"},"<your-github-username>")," with your information:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/<your-github-username>/graphql-engine.git\n")))),(0,o.kt)("h3",{id:"step-2-install-docs-dependencies"},"Step 2: Install docs dependencies"),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"hasurians",label:"Hasurians",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd graphql-engine-mono/docs && yarn install\n"))),(0,o.kt)(i.Z,{value:"community",label:"Community Members",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd graphql-engine/docs && yarn install\n")))),(0,o.kt)("p",null,"We also highly recommend testing locally at this point. Start the development server by running the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn start\n")),(0,o.kt)("p",null,"If the server doesn't start, check the errors logging to the terminal. You can also check the\n",(0,o.kt)("a",{parentName:"p",href:"#common-errors"},"common errors section")," at the bottom of this page. Hit up Sean Park-Ross on\n",(0,o.kt)("a",{parentName:"p",href:"https://hasurahq.slack.com/team/U03J31UJ8V7"},"Slack")," (for Hasurians) or\n",(0,o.kt)("a",{parentName:"p",href:"https://discord.com/users/981277708564721694"},"Discord")," (for our community members) / Rob Dominguez on\n",(0,o.kt)("a",{parentName:"p",href:"https://hasurahq.slack.com/team/U03H7ABDMF1"},"Slack")," (for Hasurians) or ",(0,o.kt)("a",{parentName:"p",href:"https://discord.com/users/5592"},"Discord")," (for\nour community members) if you need help troubleshooting."),(0,o.kt)("p",null,"Otherwise, congrats! You're ready to start slinging docs \ud83e\udd19"),(0,o.kt)("h2",{id:"workflow"},"Workflow"),(0,o.kt)("h3",{id:"step-1-create-a-new-branch"},"Step 1: Create a new branch"),(0,o.kt)("p",null,"If it's been a while since you've pulled from ",(0,o.kt)("inlineCode",{parentName:"p"},"main")," (",(0,o.kt)("inlineCode",{parentName:"p"},"master")," for the OSS repo), make sure it's up-to-date before\ncreating a new branch for this contribution. You can simply run ",(0,o.kt)("inlineCode",{parentName:"p"},"git pull")," while on the trunk to update your local\nrepository to the current state of the remote on GitHub. Then, utilize the command below the next paragraph to create\nyour branch."),(0,o.kt)("p",null,"If this is a fresh clone, there shouldn't be any need to ",(0,o.kt)("inlineCode",{parentName:"p"},"pull")," changes down from GitHub. You can create a new branch\nand simultaneously switch to it using the command below. We follow a convention that includes your name + ",(0,o.kt)("inlineCode",{parentName:"p"},"docs")," + a\nkebab-cased description of what the branch will focus on. For example: ",(0,o.kt)("inlineCode",{parentName:"p"},"rob/docs/add-more-bourdain-references"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout -b <your-name>/docs/<short-update-description>\n")),(0,o.kt)("p",null,"Once this command is run, you should be on your new branch!"),(0,o.kt)("h3",{id:"step-2-start-the-development-server"},"Step 2: Start the development server"),(0,o.kt)("p",null,"You'll want to start the development server so you can see all your changes live. Especially the first time, the\ndevelopment server will take ",(0,o.kt)("em",{parentName:"p"},"some")," time to spin up. However, Docusaurus caches content...so this gets better with\nrepetition."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn start\n")),(0,o.kt)("h3",{id:"step-3-make-your-local-changes"},"Step 3: Make your local changes"),(0,o.kt)("p",null,"We have a ",(0,o.kt)("a",{parentName:"p",href:"/wiki/category/style/"},"comprehensive-yet-continually-evolving style guide"),". We ask that you reference it as\nyou begin formatting your docs contribution."),(0,o.kt)("p",null,"If you don't want to go piece-by-piece in the style guide, find a page of documentation you think works well and use it\nas a template."),(0,o.kt)("admonition",{title:"Note",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Docusaurus utilizes a file-based routing system. You can see more about\n",(0,o.kt)("a",{parentName:"p",href:"/wiki/working-with-docusaurus"},"working with Docusaurus")," here."),(0,o.kt)("p",{parentName:"admonition"},"Most files you'll be authoring will be ",(0,o.kt)("inlineCode",{parentName:"p"},".mdx"),". It's like markdown on steroids and allows utilization of ",(0,o.kt)("inlineCode",{parentName:"p"},"jsx"),"\ncomponents. For more information about the syntax of markdown,\n",(0,o.kt)("a",{parentName:"p",href:"https://www.markdownguide.org/basic-syntax/"},"check out these docs"),".")),(0,o.kt)("h3",{id:"step-4-stage-your-local-changes"},"Step 4: Stage your local changes"),(0,o.kt)("p",null,"After your changes have been made, you'll need to stage them using Git. The following command will add all modifications\nyou've made to Git's staging area:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git add .\n")),(0,o.kt)("h3",{id:"step-5-create-a-commit"},"Step 5: Create a commit"),(0,o.kt)("p",null,"With your changes staged, you'll need to create a commit with a commit message. Prefix the message with ",(0,o.kt)("inlineCode",{parentName:"p"},"docs:")," and a\nimperative verb followed by a description of the changes present in the commit:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git commit -m \u201cdocs: update / fix / add <feature>\u201d\n")),(0,o.kt)("admonition",{title:"Note",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The size of commits isn't of massive importance for docs contributions. If you're here for a quick fix, chances are\nthere will only be one commit. Alternatively, if you're working on a large contribution documenting a new feature and\nneed to modify / add / delete multiple files, it helps to have more atomic commits reflective of each set of actions.")),(0,o.kt)("h3",{id:"step-6-test-your-local-changes"},"Step 6: Test your local changes"),(0,o.kt)("p",null,"We don't have unit tests for docs. However, Docusaurus will (generally) let you know when it's not happy with something\nyou did. As such, our testing process consists of doing a build and serving from the ",(0,o.kt)("inlineCode",{parentName:"p"},"build")," folder to make sure\neverything functions correctly. To start your build, from the ",(0,o.kt)("inlineCode",{parentName:"p"},"/docs")," directory, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn build\n")),(0,o.kt)("p",null,"After a bit, you should see output similar to this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Lots of other output above this...\n[SUCCESS] Generated static files in build.\n[INFO] Use `npm run serve` command to test your build locally.\n\u2728  Done in 35.84s.\n")),(0,o.kt)("p",null,"If you don't see an output similar to the above (especially one that's missing ",(0,o.kt)("inlineCode",{parentName:"p"},"SUCCESS"),"), something went wrong. There\nshould be errors logged in the terminal; check the ",(0,o.kt)("a",{parentName:"p",href:"#common-errors"},"common errors section")," at the bottom of this page\nfor more info."),(0,o.kt)("p",null,"Once you achieve a successful build, serve the ",(0,o.kt)("inlineCode",{parentName:"p"},"build")," folder using the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn serve\n")),(0,o.kt)("p",null,"All you're doing here is checking to ensure your pages render as expected. Go through any changes you made and ensure\nthere's no missing images, broken links, or malformations in your code snippets (especially ",(0,o.kt)("inlineCode",{parentName:"p"},"gql"),"!)."),(0,o.kt)("h3",{id:"step-7-push-your-commits"},"Step 7: Push your commit(s)"),(0,o.kt)("p",null,"With everything rendering as expected, it's time to push this contribution online! Run the following to push your\nchanges up to GitHub:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git push origin <name-of-your-branch>\n")),(0,o.kt)("h3",{id:"step-8-compare-and-pull-request"},"Step 8: Compare and pull request"),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"hasurians",label:"Hasurians",mdxType:"TabItem"},(0,o.kt)("p",null,"Head to the ",(0,o.kt)("inlineCode",{parentName:"p"},"hasura/graphql-engine-mono")," repo and you should see a ",(0,o.kt)("inlineCode",{parentName:"p"},"Compare & pull request")," button - click it to create\nyou PR \ud83e\udd19"),(0,o.kt)("p",null,"Follow the instructions in the PR template and don't forget to add the ",(0,o.kt)("inlineCode",{parentName:"p"},"c/docs")," label."),(0,o.kt)("p",null,"Once you open your PR, hasura-bot will assign a docs reviewer, and prompt you with some steps you need to complete for us to review your PR. You'll also get a handy preview link (which will need some time to build) at the end of the comment.")),(0,o.kt)(i.Z,{value:"community",label:"Community Members",mdxType:"TabItem"},(0,o.kt)("p",null,"Head to your forked copy of the ",(0,o.kt)("inlineCode",{parentName:"p"},"hasura/graphql-engine")," repo and you should see a ",(0,o.kt)("inlineCode",{parentName:"p"},"Compare & pull request")," button -\nclick it to create you PR \ud83e\udd19"),(0,o.kt)("p",null,"Follow the instructions in the PR template and don't forget to add the ",(0,o.kt)("inlineCode",{parentName:"p"},"c/docs")," label."),(0,o.kt)("p",null,"We'll get a ping from hasura-bot and review your great work ASAP \ud83d\udd25"))),(0,o.kt)("admonition",{title:"Note",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"If you're including a significant feature update or bug fix that should be noted on the next release, please be sure to\nupdate ",(0,o.kt)("inlineCode",{parentName:"p"},"CHANGELOG.md")," in the root directory of the repo as well.")),(0,o.kt)("h2",{id:"common-errors"},"Common errors"),(0,o.kt)("p",null,"We all make mistakes! Here's the most common ones we encounter. This is not an exhaustive list, but if you find lots of\nerrors getting thrown, chances are the issue is one of the items below. These are rank-ordered according to what we\nencounter most often."),(0,o.kt)("h3",{id:"broken-markdown-links"},"Broken markdown links"),(0,o.kt)("p",null,"With Docusaurus's file-based routing system, markdown links commonly break due to one of two circumstances:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Filename changes"),(0,o.kt)("p",{parentName:"li"},"The url path for a particular page is dependent upon its filename. If you change the name of a file, any link\nreferencing it will break. The error thrown to the Console will alert you to which page contains the error and to\nwhich file is being referenced. If there are multiple broken links, it will list out each.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"File location changes"),(0,o.kt)("p",{parentName:"li"},"If you change the name of a file or folder (e.g., ",(0,o.kt)("inlineCode",{parentName:"p"},"modelling/index.mdx")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"modeling/index.mdx"),"), any links\nreferencing this route will break. Often, simply resolving these paths isn't enough...Docusaurus will still be looking\nfor these files. If this is the case, kill the server (",(0,o.kt)("inlineCode",{parentName:"p"},"CTRL+c"),") and start it up again by running ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn start"),"."))),(0,o.kt)("p",null,"Regardless of which of the above circumstances caused this error, you'll see output similar to this within the server\nconsole:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"Error: Docs markdown link couldn't be resolved: (/styles/index.mdx) in ~/hasura/graphql-engine-mono/docs/wiki/contributions.mdx for version current\n    at Array.forEach (<anonymous>)\nclient (webpack 5.70.0) compiled with 1 error\n")),(0,o.kt)("h3",{id:"broken-image-links"},"Broken image links"),(0,o.kt)("p",null,"Assets are stored in ",(0,o.kt)("inlineCode",{parentName:"p"},"static/img/<feature-folder>"),". Just like the file-based routing Docusaurus uses to render pages,\nfile paths are important for images as well. However, instead of any output to the Console, the page will simply crash\nand present a message indicating which image's path cannot be resolved."),(0,o.kt)(a.Z,{src:"/img/wiki/broken-image.png",alt:"Add check constraint",width:"1000px",mdxType:"Thumbnail"}),(0,o.kt)("p",null,"Use the erroneous image path to identify the error, facepalm, and then fix your typo."),(0,o.kt)("admonition",{title:"Note",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"We use the PNG image format. When you create a PR, our automated CI processes take care of image optimization\nautomatically \ud83d\ude80")),(0,o.kt)("h3",{id:"improperly-imported-components"},"Improperly imported components"),(0,o.kt)("p",null,"This is a sneaky one. If you forget to import a component - such as the ",(0,o.kt)("inlineCode",{parentName:"p"},"<Thumbnail />")," component used for images -\nthere won't be any errors thrown by the server. However, if you check your browser's developer tools, you'll notice the\nquite prominent error. Thus, when something just isn't appearing...check the browser's Console."),(0,o.kt)("p",null,"Simply import the missing component at the top of the page and viola \ud83e\udd0c"),(0,o.kt)("h3",{id:"formatting-code-blocks"},"Formatting code blocks"),(0,o.kt)("p",null,"Perhaps the biggest pitfall we've encountered with Docusaurus is how delicate ",(0,o.kt)("inlineCode",{parentName:"p"},".mdx")," files can be with regard to\nplacement of code blocks and other text. If you've included a code block using common markdown syntax, and things aren't\nrendering as you think they should, try giving the block a bit of breathing room with a single empty line above and\nbelow it."),(0,o.kt)("h2",{id:"codespaces"},"Codespaces"),(0,o.kt)("admonition",{title:"Note",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"For Hasurians, we've recently introduced a new way to contribute to the docs:\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.github.com/en/codespaces"},"Codespaces"),". This is a new feature from GitHub that allows you to spin up a\nfully-configured docs dev environment in the cloud. This means you can get started contributing to the docs without\nhaving to install any dependencies on your local machine.")),(0,o.kt)("h3",{id:"step-1-create-a-codespace"},"Step 1: Create a Codespace"),(0,o.kt)("p",null,"Head to the ",(0,o.kt)("inlineCode",{parentName:"p"},"hasura/graphql-engine-mono")," repo and click the ",(0,o.kt)("inlineCode",{parentName:"p"},"Code")," button. You should see a ",(0,o.kt)("inlineCode",{parentName:"p"},"Open with Codespaces"),"\nbutton. Click it and choose ",(0,o.kt)("inlineCode",{parentName:"p"},"...")," and then ",(0,o.kt)("inlineCode",{parentName:"p"},"+ New with options...")," as in the example below:"),(0,o.kt)(a.Z,{src:"/img/wiki/codespaces-1.gif",alt:"Create Codespace",width:"1000px",mdxType:"Thumbnail"}),(0,o.kt)("h3",{id:"step-2-configure-your-codespace"},"Step 2: Configure your Codespace"),(0,o.kt)("p",null,"You'll be presented with a few options. Select the ",(0,o.kt)("inlineCode",{parentName:"p"},"docs")," devcontainer, the region nearest to you, and a machine type\nbefore clicking ",(0,o.kt)("inlineCode",{parentName:"p"},"Create codespace"),":"),(0,o.kt)(a.Z,{src:"/img/wiki/codespaces-2.gif",alt:"Create Codespace",width:"1000px",mdxType:"Thumbnail"}),(0,o.kt)("p",null,"The Codespace will spin up and you'll be presented with a fully-configured dev environment. We automatically open you to\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"CODESPACES.md")," file where you can follow the instructions to get started quickly."))}b.isMDXComponent=!0},50551:(e,t,n)=>{n.d(t,{Z:()=>i});var o=n(67294),a=n(86010);const r={tabItem:"tabItem_Ymn6"};function i({children:e,hidden:t,className:n}){return o.createElement("div",{role:"tabpanel",className:(0,a.Z)(r.tabItem,n),hidden:t},e)}},93070:(e,t,n)=>{n.d(t,{Z:()=>S});var o=n(67294),a=n(86010),r=n(6379),i=n(16550),l=n(47348),s=n(83928),u=n(76632);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function d(e){return function(e){var t,n;return null!==(n=null===(t=o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))||void 0===t?void 0:t.filter(Boolean))&&void 0!==n?n:[]}(e).map((({props:{value:e,label:t,attributes:n,default:o}})=>({value:e,label:t,attributes:n,default:o})))}function m(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=null!=t?t:d(n);return function(e){const t=(0,s.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function h({value:e,tabValues:t}){return t.some((t=>t.value===e))}function g({queryString:e=!1,groupId:t}){const n=(0,i.k6)(),a=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:e,groupId:t}),r=(0,l._X)(a),s=(0,o.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(n.location.search);t.set(a,e),n.replace(p(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},o=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),o.forEach((function(t){c(e,t,n[t])}))}return e}({},n.location),{search:t.toString()}))}),[a,n]);return[r,s]}function k(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=m(e),[i,l]=(0,o.useState)((()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}var n;const o=null!==(n=t.find((e=>e.default)))&&void 0!==n?n:t[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:t,tabValues:r}))),[s,c]=g({queryString:n,groupId:a}),[p,d]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,a]=(0,u.Nk)(t);return[n,(0,o.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:a}),k=(()=>{const e=null!=s?s:p;return h({value:e,tabValues:r})?e:null})();(0,o.useLayoutEffect)((()=>{k&&l(k)}),[k]);return{selectedValue:i,selectValue:(0,o.useCallback)((e=>{if(!h({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),d(e)}),[c,d,r]),tabValues:r}}var b=n(30358);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function w(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},o=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),o.forEach((function(t){y(e,t,n[t])}))}return e}function v(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function N({className:e,block:t,selectedValue:n,selectValue:i,tabValues:l}){const s=[],{blockElementScrollPositionUntilNextRender:u}=(0,r.o5)(),c=e=>{const t=e.currentTarget,o=s.indexOf(t),a=l[o].value;a!==n&&(u(t),i(a))},p=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const o=s.indexOf(e.currentTarget)+1;var n;t=null!==(n=s[o])&&void 0!==n?n:s[0];break}case"ArrowLeft":{const n=s.indexOf(e.currentTarget)-1;var o;t=null!==(o=s[n])&&void 0!==o?o:s[s.length-1];break}}null==t||t.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":t},e)},l.map((({value:e,label:t,attributes:r})=>o.createElement("li",v(w({role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,key:e,ref:e=>s.push(e),onKeyDown:p,onClick:c},r),{className:(0,a.Z)("tabs__item",f.tabItem,null==r?void 0:r.className,{"tabs__item--active":n===e})}),null!=t?t:e))))}function C({lazy:e,children:t,selectedValue:n}){const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=a.find((e=>e.props.value===n));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function O(e){const t=k(e);return o.createElement("div",{className:(0,a.Z)("tabs-container",f.tabList)},o.createElement(N,w({},e,t)),o.createElement(C,w({},e,t)))}function S(e){const t=(0,b.Z)();return o.createElement(O,w({key:String(t)},e))}}}]);