"use strict";(self.webpackChunkdronahq_docs=self.webpackChunkdronahq_docs||[]).push([[17621],{61518:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>p,toc:()=>u});t(67294);var a=t(3905);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}const i={sidebar_position:3},s="Deploy on Google Cloud Compute Engine",p={unversionedId:"self-hosted-deployment/deployment-options/gcp",id:"self-hosted-deployment/deployment-options/gcp",title:"Deploy on Google Cloud Compute Engine",description:"Follow the instructions in this guide to setup DronaHQ in self hosted environment on Google Cloud Compute Engine virtual machine.",source:"@site/docs/self-hosted-deployment/deployment-options/gcp.md",sourceDirName:"self-hosted-deployment/deployment-options",slug:"/self-hosted-deployment/deployment-options/gcp",permalink:"/self-hosted-deployment/deployment-options/gcp",draft:!1,tags:[],version:"current",lastUpdatedAt:1713529446,formattedLastUpdatedAt:"Apr 19, 2024",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docSidebar",previous:{title:"Deploy on Amazon Elastic Compute Cloud",permalink:"/self-hosted-deployment/deployment-options/aws-ec2"},next:{title:"Deploy on Azure Virtual Machine",permalink:"/self-hosted-deployment/deployment-options/azure"}},d={},u=[{value:"Prerequisite",id:"prerequisite",level:3},{value:"1. Create VM instance",id:"1-create-vm-instance",level:3},{value:"2. Connect to your Linux instance using an SSH client",id:"2-connect-to-your-linux-instance-using-an-ssh-client",level:3},{value:"Connect to your instance using SSH",id:"connect-to-your-instance-using-ssh",level:4},{value:"3. Download DronaHQ Self Hosted",id:"3-download-dronahq-self-hosted",level:3},{value:"a. Cloning Git repository",id:"a-cloning-git-repository",level:4},{value:"b. Download and extract compressed package from DronaHQ",id:"b-download-and-extract-compressed-package-from-dronahq",level:4},{value:"4. Change working directory",id:"4-change-working-directory",level:3},{value:"5. Update resources",id:"5-update-resources",level:3},{value:"6. Setup Externalize databases",id:"6-setup-externalize-databases",level:3},{value:"6. Setup DronaHQ Environment",id:"6-setup-dronahq-environment",level:3},{value:"7. Update environment variables",id:"7-update-environment-variables",level:3},{value:"i. <code>LICENSE_KEY</code>",id:"i-license_key",level:4},{value:"ii. <code>BUILDER_URL</code>",id:"ii-builder_url",level:4},{value:"iii. Database configuration variables",id:"iii-database-configuration-variables",level:4},{value:"iv. Other environment variables",id:"iv-other-environment-variables",level:4},{value:"8. Restart DronaHQ",id:"8-restart-dronahq",level:3},{value:"9. Verify that containers are running",id:"9-verify-that-containers-are-running",level:3},{value:"Hurray !!! Now you have working self hosted DronaHQ.",id:"hurray--now-you-have-working-self-hosted-dronahq",level:4}],c={toc:u},m="wrapper";function h(e){var{components:n}=e,i=l(e,["components"]);return(0,a.kt)(m,r(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},a=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),a.forEach((function(n){o(e,n,t[n])}))}return e}({},c,i),{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"deploy-on-google-cloud-compute-engine"},"Deploy on Google Cloud Compute Engine"),(0,a.kt)("p",null,"Follow the instructions in this guide to setup DronaHQ in self hosted environment on Google Cloud Compute Engine virtual machine."),(0,a.kt)("h3",{id:"prerequisite"},"Prerequisite"),(0,a.kt)("p",null,"To deploy DronaHQ on Google Cloud Compute Engine, you should have:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"DronaHQ License Key"),", which you can get from DronaHQ ",(0,a.kt)("a",{parentName:"li",href:"https://studio.dronahq.com/selfhosted/login"},"Self Hosted Portal"),"."),(0,a.kt)("li",{parentName:"ul"},"Basic understanding of ",(0,a.kt)("inlineCode",{parentName:"li"},"GCP")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"Compute Engine Virtual Machine"),"."),(0,a.kt)("li",{parentName:"ul"},"Working ",(0,a.kt)("a",{parentName:"li",href:"https://console.cloud.google.com"},"Google Cloud Platform account"),".")),(0,a.kt)("p",null,"Following are some references, which can help you sail through GCP Virtual Machine."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://cloud.google.com/compute/docs/instances/create-start-instance"},"Create and start a VM instance")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://cloud.google.com/compute/docs/connect/standard-ssh"},"Connect to Linux VMs")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://cloud.google.com/compute/docs/troubleshooting/troubleshooting-ssh-errors"},"Troubleshooting SSH errors"))),(0,a.kt)("h3",{id:"1-create-vm-instance"},"1. Create VM instance"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"On GCP ",(0,a.kt)("a",{parentName:"p",href:"https://console.cloud.google.com/compute/instances"},"Compute engine dashboard"),", Click on ",(0,a.kt)("strong",{parentName:"p"},"CREATE INSTANCE"),".")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Optionally you can add some Labels and Tags (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"app = dronahq"),") in ",(0,a.kt)("inlineCode",{parentName:"p"},"MANAGE TAGS AND LABELS")," section. This makes it easier to find if you have a lot of instances.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Name your instance, to identify it later.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Select appropriate VM configuration as per your requirement. Please make sure that you follow our ",(0,a.kt)("a",{parentName:"p",href:"/self-hosted-deployment/requirements"},"minimum requirements")," guidelines.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"In ",(0,a.kt)("inlineCode",{parentName:"p"},"Boot Disk")," section, Modify storage size to minimum of ",(0,a.kt)("inlineCode",{parentName:"p"},"60 GiB"),". In operating system, Select ",(0,a.kt)("inlineCode",{parentName:"p"},"Ubuntu")," AMI with ubuntu version ",(0,a.kt)("inlineCode",{parentName:"p"},"20.04")," or higher and ",(0,a.kt)("inlineCode",{parentName:"p"},"64-bit (x84)")," architecture.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"In ",(0,a.kt)("inlineCode",{parentName:"p"},"Firewall"),", allow ",(0,a.kt)("inlineCode",{parentName:"p"},"http")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"https")," traffic.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"In security section, you can add manually generated SSH keys. By default, when you connect to a VM using this console or gcloud, your SSH keys are generated automatically. ",(0,a.kt)("a",{parentName:"p",href:"https://cloud.google.com/compute/docs/instances/ssh"},"Learn more"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"click on ",(0,a.kt)("strong",{parentName:"p"},"CREATE")," button to start your instance."))),(0,a.kt)("h3",{id:"2-connect-to-your-linux-instance-using-an-ssh-client"},"2. Connect to your Linux instance using an SSH client"),(0,a.kt)("p",null,"Use the following procedure to connect to your Linux instance using an SSH client. If you receive an error while attempting to connect to your instance, see ",(0,a.kt)("a",{parentName:"p",href:"https://cloud.google.com/compute/docs/troubleshooting/troubleshooting-ssh-errors"},"Troubleshoot connecting to your instance"),"."),(0,a.kt)("h4",{id:"connect-to-your-instance-using-ssh"},"Connect to your instance using SSH"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"In a terminal window, use the ssh command to connect to the instance. You specify the path and file name of the private key (.pem), the user name for your instance, and the public DNS name or IPv6 address for your instance. For more information about how to find the private key, the user name for your instance, and the DNS name or IPv6 address for an instance, see Locate the private key and set permissions and Get information about your instance. To connect to your instance, use one of the following commands."),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"(Public DNS) To connect using your instance's public DNS name, enter the following command.",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"ssh -i /path/key-pair-name.pem instance-user-name@instance-public-dns-name\n"))),(0,a.kt)("li",{parentName:"ul"},"(IPv6) Alternatively, if your instance has an IPv6 address, to connect using your instance's IPv6 address, enter the following command.",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"ssh -i /path/key-pair-name.pem instance-user-name@instance-IPv6-address\n")))),(0,a.kt)("p",{parentName:"li"},"You see a response like the following:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"The authenticity of host '34.105.89.192 (34.105.89.192)' can't be established.\nED25519 key fingerprint is SHA256:gdEtnJ+kLJ1MzPnfCJNfdrstN5xb6s01lLlU1Xtz62g.\nThis key is not known by any other names\nAre you sure you want to continue connecting (yes/no/[fingerprint])?\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"(Optional) Verify that the fingerprint in the security alert matches the fingerprint that you previously obtained while creating virtual machine. If these fingerprints don't match, someone might be attempting a man-in-the-middle attack. If they match, continue to the next step.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Enter ",(0,a.kt)("inlineCode",{parentName:"p"},"yes"),"."),(0,a.kt)("p",{parentName:"li"},"You see a response like the following:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"Warning: Permanently added '34.105.89.192' (ED25519) to the list of known hosts.\n")))),(0,a.kt)("h3",{id:"3-download-dronahq-self-hosted"},"3. Download DronaHQ Self Hosted"),(0,a.kt)("p",null,"There are two ways, you can download DronaHQ Self Hosted."),(0,a.kt)("h4",{id:"a-cloning-git-repository"},"a. Cloning Git repository"),(0,a.kt)("p",null,"To clone from git repository, run following command."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/dronahq/self-hosted.git dronahq-self-hosted\n")),(0,a.kt)("p",null,"Above command will create new folder in your present working directory with name ",(0,a.kt)("inlineCode",{parentName:"p"},"dronahq-self-hosted"),"."),(0,a.kt)("h4",{id:"b-download-and-extract-compressed-package-from-dronahq"},"b. Download and extract compressed package from DronaHQ"),(0,a.kt)("p",null,"To download compressed package from DronaHQ, run following command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl -L -fsSL -o ./master.zip "https://license.dronahq.com/self-hosted/master.zip" && unzip master.zip && mv master dronahq-self-hosted\n')),(0,a.kt)("h3",{id:"4-change-working-directory"},"4. Change working directory"),(0,a.kt)("p",null,"We have to change working directory to ",(0,a.kt)("inlineCode",{parentName:"p"},"dronahq-self-hosted")," for playing with DronaHQ."),(0,a.kt)("p",null,"Use following command."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"cd dronahq-self-hosted\n")),(0,a.kt)("h3",{id:"5-update-resources"},"5. Update resources"),(0,a.kt)("p",null,"This is recommended step by DronaHQ. Updating your resources periodically will help you stay aligned with DronaHQ."),(0,a.kt)("p",null,"Run following command"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'/bin/bash -c "$(curl -fsSL https://license.dronahq.com/self-hosted/master/update_resources.sh)"\n')),(0,a.kt)("h3",{id:"6-setup-externalize-databases"},"6. Setup Externalize databases"),(0,a.kt)("p",null,"For deployment on ",(0,a.kt)("inlineCode",{parentName:"p"},"GCP Virtual machine"),", it is mandatory to setup external databases for both MYSQL and MONGODB. "),(0,a.kt)("p",null,"Please follow our guide on ",(0,a.kt)("a",{href:"/self-hosted-deployment/configure-external-databases/",target:"_blank"},"Configure external databases"),"."),(0,a.kt)("h3",{id:"6-setup-dronahq-environment"},"6. Setup DronaHQ Environment"),(0,a.kt)("admonition",{title:"Warning",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Running this script will clear your existing installation if you have any. It will setup completely new environment. It will create back of your current environment and storage directory with time stamp followed by file/folder name.")),(0,a.kt)("p",null,"To setup dronahq environment, you have to run ",(0,a.kt)("inlineCode",{parentName:"p"},"./dronahq_setup")," already present in your working directory."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"./dronahq_setup\n")),(0,a.kt)("h3",{id:"7-update-environment-variables"},"7. Update environment variables"),(0,a.kt)("p",null,"DronaHQ writes all configurable environment variables in file ",(0,a.kt)("inlineCode",{parentName:"p"},"dronahq.env"),". Please make sure you have all mandatory variables are in place."),(0,a.kt)("h4",{id:"i-license_key"},"i. ",(0,a.kt)("inlineCode",{parentName:"h4"},"LICENSE_KEY")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"LICENSE_KEY")," is one of the mandatory and essential environment variable. please verify that you have it in ",(0,a.kt)("inlineCode",{parentName:"p"},"dronahq.env"),".\nIf not you can add this variable. Following is the example of how this variable should look like in environment file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"LICENSE_KEY='DRONAHQ-LICENSE-KEY'\n")),(0,a.kt)("p",null,"If you don't have DronaHQ license key for self hosted, you can ",(0,a.kt)("a",{parentName:"p",href:"https://www.dronahq.com/self-hosted-signup/"},"sign up")," for DronaHQ self hosted and get your license key by logging in to ",(0,a.kt)("a",{parentName:"p",href:"https://studio.dronahq.com/selfhosted/login"},"self-hosted portal"),"."),(0,a.kt)("h4",{id:"ii-builder_url"},"ii. ",(0,a.kt)("inlineCode",{parentName:"h4"},"BUILDER_URL")),(0,a.kt)("p",null,"This variable specifies how do yo want to access DronaHQ."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Protocol ","[ http/ https]"),(0,a.kt)("li",{parentName:"ul"},"Access domain ","[ Localhost/ IP address/ Domain Name]"," ")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 1"),". If you are using DronaHQ on local machine."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"BULDER_URL='http://localhost'\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 2"),". If you have configured DronaHQ on server and want to use it with server's public IP address."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# replace your ip address here\nBUILDER_URL='http://34.105.89.192'\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 3"),". If you have mapped your domain name to server's IP address."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# replace your domain name\nBUILDER_URL='http://dronahq.example.com'\n")),(0,a.kt)("h4",{id:"iii-database-configuration-variables"},"iii. Database configuration variables"),(0,a.kt)("p",null,"Configure variables for external MYSQL credentials"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"MYSQL_HOST"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"MYSQL_USER"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"MYSQL_PASSWORD"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"MYSQL_PORT")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"MYSQL_HOST='mysql.example.com'\nMYSQL_USER='dronahq'\nMYSQL_PASSWORD='secret-password'\nMYSQL_PORT='3306'\n")),(0,a.kt)("p",null,"Configure variables for external MONGODB credentials"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"MONGODB_HOST"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"MONGODB_USER"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"MONGODB_PASSWORD"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"MONGODB_PORT")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"MONGODB_HOST='mongodb.example.com'\nMONGODB_USER='dronahq'\nMONGODB_PASSWORD='secret-password'\nMONGODB_PORT='27017'\n")),(0,a.kt)("h4",{id:"iv-other-environment-variables"},"iv. Other environment variables"),(0,a.kt)("p",null,"You can also checkout other ",(0,a.kt)("a",{parentName:"p",href:"/self-hosted-deployment/environment-variables"},"Environment Variables"),", which can enable advance options for you to use DronaHQ Self Hosted."),(0,a.kt)("h3",{id:"8-restart-dronahq"},"8. Restart DronaHQ"),(0,a.kt)("p",null,"You can apply all new changes in configuration, and restart DronaHQ simply by running following command."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"sudo docker-compose up -d\n")),(0,a.kt)("h3",{id:"9-verify-that-containers-are-running"},"9. Verify that containers are running"),(0,a.kt)("p",null,"You can use following command to check running docker containers."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"sudo docker-compose ps\n")),(0,a.kt)("p",null,"It should look something like this"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"sudo docker-compose ps",src:t(14735).Z,title:"sudo docker-compose ps",width:"2064",height:"172"})),(0,a.kt)("h4",{id:"hurray--now-you-have-working-self-hosted-dronahq"},"Hurray !!! Now you have working self hosted DronaHQ."))}h.isMDXComponent=!0},14735:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/sudo-docker-compose-ps-206b6615f25a0d09b0951a56ea906b7c.png"}}]);