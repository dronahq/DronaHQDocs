"use strict";(self.webpackChunkdronahq_docs=self.webpackChunkdronahq_docs||[]).push([[56367],{18264:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>g,frontMatter:()=>u,metadata:()=>i,toc:()=>d});a(67294);var r=a(3905);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))})),e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}const u={sidebar_position:3},o="Returning structured data",i={unversionedId:"reference/dronahq-query-language/returning-structured-data",id:"reference/dronahq-query-language/returning-structured-data",title:"Returning structured data",description:"The following examples demonstrate how to use DQL to return structured data from JSON data.",source:"@site/docs/reference/dronahq-query-language/returning-structured-data.md",sourceDirName:"reference/dronahq-query-language",slug:"/reference/dronahq-query-language/returning-structured-data",permalink:"/reference/dronahq-query-language/returning-structured-data",draft:!1,tags:[],version:"current",lastUpdatedAt:1706882289,formattedLastUpdatedAt:"Feb 2, 2024",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docSidebar",previous:{title:"Selecting conditional data",permalink:"/reference/dronahq-query-language/selecting-conditional-data"},next:{title:"Manipulating data",permalink:"/reference/dronahq-query-language/manipulating-data"}},p={},d=[{value:"Contents",id:"contents",level:2},{value:"Example JSON",id:"example-json",level:2},{value:"Return multiple objects as an array",id:"return-multiple-objects-as-an-array",level:2},{value:"DQL",id:"dql",level:5},{value:"Result",id:"result",level:5},{value:"Return an array of a single field from multiple objects",id:"return-an-array-of-a-single-field-from-multiple-objects",level:2},{value:"DQL",id:"dql-1",level:5},{value:"Result",id:"result-1",level:5},{value:"Collapse multiple objects into a single key-value pair",id:"collapse-multiple-objects-into-a-single-key-value-pair",level:2},{value:"DQL",id:"dql-2",level:5},{value:"Result",id:"result-2",level:5},{value:"Collapse and group results by a shared field value",id:"collapse-and-group-results-by-a-shared-field-value",level:2},{value:"DQL",id:"dql-3",level:5},{value:"Result",id:"result-3",level:5}],c={toc:d},m="wrapper";function g(e){var{components:t}=e,a=s(e,["components"]);return(0,r.kt)(m,l(function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{},r=Object.keys(a);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(a).filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable})))),r.forEach((function(t){n(e,t,a[t])}))}return e}({},c,a),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"returning-structured-data"},"Returning structured data"),(0,r.kt)("p",null,"The following examples demonstrate how to use DQL to return structured data from JSON data."),(0,r.kt)("h2",{id:"contents"},"Contents"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#example-json"},"Example JSON")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#return-multiple-objects-as-an-array"},"Return multiple objects as an array")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#return-an-array-of-a-single-field-from-multiple-objects"},"Return an array of a single field from multiple objects")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#collapse-multiple-objects-into-a-single-key-value-pair"},"Collapse multiple objects into a single key-value pair")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#collapse-and-group-results-by-a-shared-field-value"},"Collapse and group results by a shared field value"))),(0,r.kt)("h2",{id:"example-json"},"Example JSON"),(0,r.kt)("p",null,"The examples below use this JSON data:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "John Smith",\n    "physical_address": {\n        "street": "123 Park Avenue",\n        "city": "Atlanta",\n        "state": "GA",\n        "zip": "12345"\n    },\n    "work_address": {\n        "street": "583 W. Island Drive",\n        "city": "Miami",\n        "state": "FL",\n        "zip": "44456"\n    },\n    "mailing_address": {\n        "street": "232 Ravensburg Road",\n        "city": "Durham",\n        "state": "NC",\n        "zip": "03948"\n    },\n    "phones": [\n        {\n            "type": "Home",\n            "number": "123-456-7890"\n        },\n        {\n            "type": "Cell",\n            "number": "098-765-4321"\n        },\n        {\n            "type": "Cell",\n            "number": "888-777-5555"\n        },\n        {\n            "type": "work",\n            "number": "314-265-9078"\n        }\n    ]\n}\n')),(0,r.kt)("h2",{id:"return-multiple-objects-as-an-array"},"Return multiple objects as an array"),(0,r.kt)("p",null,"The example below returns three objects as an array."),(0,r.kt)("h5",{id:"dql"},"DQL"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"[physical_address, work_address, mailing_address]\n")),(0,r.kt)("h5",{id:"result"},"Result"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'[\n    {"street": "123 Park Avenue","city": "Atlanta","state": "GA","zip": "12345"},\n    {"street": "583 W. Island Drive","city": "Miami","state": "FL","zip": "44456" },\n    {"street": "232 Ravensburg Road","city": "Durham","state": "NC","zip": "03948"}\n]\n')),(0,r.kt)("h2",{id:"return-an-array-of-a-single-field-from-multiple-objects"},"Return an array of a single field from multiple objects"),(0,r.kt)("p",null,"The example below gets the values of the city key from three objects and returns the values as an array."),(0,r.kt)("h5",{id:"dql-1"},"DQL"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"[physical_address, work_address, mailing_address].city\n")),(0,r.kt)("h5",{id:"result-1"},"Result"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'["Atlanta","Miami","Durham"]\n')),(0,r.kt)("h2",{id:"collapse-multiple-objects-into-a-single-key-value-pair"},"Collapse multiple objects into a single key-value pair"),(0,r.kt)("p",null,"DQL can return an array of key-value pairs composed of values from an object. The example below gets the values of the type and number keys from objects in the phones array and returns them as an array of key-value pairs."),(0,r.kt)("h5",{id:"dql-2"},"DQL"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-string"},'phones.{"type": number}\n')),(0,r.kt)("h5",{id:"result-2"},"Result"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'[\n    {"Home": "123-456-7890"},\n    {"Cell": "098-765-4321"},\n    {"Cell": "888-777-5555"},\n    {"work": "314-265-9078"}\n]\n')),(0,r.kt)("h2",{id:"collapse-and-group-results-by-a-shared-field-value"},"Collapse and group results by a shared field value"),(0,r.kt)("p",null,"DQL can return an object with key-value pairs composed of values from an object. Group returned values in an array if they have the same key name in their respective objects. The example below groups the values of Cell keys from two different objects in the phones array."),(0,r.kt)("h5",{id:"dql-3"},"DQL"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-string"},'phones.{"type": number[]}\n')),(0,r.kt)("h5",{id:"result-3"},"Result"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'{\n    "Home": ["123-456-7890"],\n    "Cell": ["098-765-4321","888-777-5555"],\n    "work": ["314-265-9078"]\n}\n')))}g.isMDXComponent=!0}}]);